{"version":3,"sources":["../src/module/map_functions.ts"],"names":[],"mappings":"AAAA,OAAO,KAAK,gBAAgB,MAAM,oBAAoB,CAAC;AACvD,OAAO,EAAE,iBAAiB,EAAE,oBAAoB,EAAE,MAAM,oBAAoB,CAAC;AAC7E,OAAO,EACL,qBAAqB,EACrB,gBAAgB,EAChB,sBAAsB,GACvB,MAAM,aAAa,CAAC;AACrB,OAAO,WAAW,MAAM,2BAA2B,CAAC;AACpD,OAAO,gBAAgB,MAAM,iCAAiC,CAAC;AA2B/D,MAAM,CAAC,MAAM,gBAAgB,GAAG,CAC9B,GAAgC,EAC0C,EAAE;IAC5E,IAAI,CAAC,GAAG,EAAE;QACR,OAAO,SAAS,CAAC;KAClB;IACD,MAAM,MAAM,GAAG,GAAG,CAAC,SAAS,EAAE,CAAC;IAC/B,IAAI,CAAC,MAAM,EAAE;QACX,OAAO,SAAS,CAAC;KAClB;IACD,MAAM,EAAE,GAAG,MAAM,CAAC,YAAY,EAAE,CAAC;IACjC,MAAM,EAAE,GAAG,MAAM,CAAC,YAAY,EAAE,CAAC;IACjC,OAAO;QACL,KAAK,EAAE,EAAE,CAAC,GAAG,EAAE;QACf,IAAI,EAAE,EAAE,CAAC,GAAG,EAAE;QACd,KAAK,EAAE,EAAE,CAAC,GAAG,EAAE;QACf,IAAI,EAAE,EAAE,CAAC,GAAG,EAAE;KACf,CAAC;AACJ,CAAC,CAAC;AACF,MAAM,CAAC,MAAM,SAAS,GAAG,CACvB,GAAgC,EACF,EAAE;IAChC,IAAI,CAAC,GAAG,EAAE;QACR,OAAO,SAAS,CAAC;KAClB;IACD,MAAM,MAAM,GAAG,GAAG,CAAC,SAAS,EAAE,CAAC;IAC/B,IAAI,CAAC,MAAM,EAAE;QACX,OAAO,SAAS,CAAC;KAClB;IACD,OAAO,MAAM,CAAC;AAChB,CAAC,CAAC;AAEF,mDAAmD;AACnD,MAAM,CAAC,MAAM,SAAS,GAAG,CACvB,GAAgC,EAChC,OAAuC,EACxB,EAAE;IACjB,OAAO,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,EAAE;QAC7B,IAAI,GAAG,EAAE;YACP,GAAG,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC;SACxB;QACD,OAAO,EAAE,CAAC;QACV,OAAO;IACT,CAAC,CAAC,CAAC;AACL,CAAC,CAAC;AAEF,MAAM,CAAC,MAAM,SAAS,GAAG,CACvB,GAAgC,EAChC,MAAkD,EACnC,EAAE;IACjB,OAAO,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,EAAE;QAC7B,IAAI,GAAG,EAAE;YACP,GAAG,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;SACvB;QACD,OAAO,OAAO,EAAE,CAAC;IACnB,CAAC,CAAC,CAAC;AACL,CAAC,CAAC;AAEF,MAAM,CAAC,MAAM,OAAO,GAAG,CACrB,aAA6C,EAC7C,YAAiB,EACjB,OAA4C,EAC1B,EAAE;IACpB,IAAI,CAAC,OAAO,EAAE;QACZ,MAAM,IAAI,KAAK,CAAC,0CAA0C,CAAC,CAAC;KAC7D;IACD,MAAM,SAAS,GAAG,YAAY,CAAC,qBAAqB,EAAE,CAAC;IACvD,IAAI,OAAmB,CAAC;IACxB,IAAI,aAAa,YAAY,MAAM,CAAC,IAAI,CAAC,MAAM,EAAE;QAC/C,OAAO,GAAG,aAAa,CAAC;KACzB;SAAM;QACL,OAAO,GAAG,IAAI,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,CAAC;KACxD;IACD,MAAM,SAAS,GAAG,OAAO,CAAC,aAAa,EAAE,CAAC,0BAA0B,CAAC,OAAO,CAAC,CAAC;IAC9E,OAAO,CAAC,SAAS,CAAC,CAAC,GAAG,SAAS,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC,GAAG,SAAS,CAAC,GAAG,CAAC,CAAC;AACrE,CAAC,CAAC;AAEF,MAAM,CAAC,MAAM,OAAO,GAAG,CACrB,UAAkB,EAClB,GAAgC,EACjB,EAAE,CACjB,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,EAAE;IACtB,GAAG,IAAI,GAAG,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC;IAC/B,OAAO,EAAE,CAAC;IACV,OAAO;AACT,CAAC,CAAC,CAAC;AAEL,MAAM,CAAC,MAAM,cAAc,GAAG,CAC5B,OAAgB,EAChB,WAAuB,EACvB,OAAqB,EACD,EAAE;IACtB,MAAM,WAAW,GAAuB,EAAE,CAAC;IAC3C,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC,EAAE,EAAE,EAAE;QAC/C,WAAW,CAAC,IAAI,CACd,gBAAgB,CAAC,cAAc,CAC7B,OAAO,EACP,WAAW,EACX,OAAO,EACP,UAAU,EACV,EAAE,CACH,CACF,CAAC;IACJ,CAAC,CAAC,CAAC;IACH,OAAO,OAAO,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC;AAClC,CAAC,CAAC;AAEF,MAAM,CAAC,MAAM,aAAa,GAAG,CAC3B,OAAgB,EAChB,WAAuB,EACvB,OAAqB,EACD,EAAE,CACtB,OAAO,CAAC,GAAG,CACT,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,EAAE,EAAE,CAC1C,gBAAgB,CAAC,cAAc,CAC7B,OAAO,EACP,WAAW,EACX,OAAO,EACP,SAAS,EACT,EAAE,CACH,CACF,CACF,CAAC;AAEJ,MAAM,CAAC,MAAM,SAAS,GAAG,CACvB,OAAgB,EAChB,GAAoB,EACpB,WAAuB,EACvB,OAAqB,EACrB,EAAmB,EACnB,OAA6B,EACD,EAAE,CAC9B,gBAAgB,CAAC,SAAS,CAAC,OAAO,EAAE,GAAG,EAAE,WAAW,EAAE,OAAO,EAAE,EAAE,EAAE,OAAO,CAAC,CAAC;AAE9E,MAAM,CAAC,MAAM,YAAY,GAAG,CAC1B,OAAgB,EAChB,WAAuB,EACvB,OAAqB,EACD,EAAE,CACtB,OAAO,CAAC,GAAG,CACT,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,EAAE,EAAE,CACzC,gBAAgB,CAAC,cAAc,CAC7B,OAAO,EACP,WAAW,EACX,OAAO,EACP,QAAQ,EACR,EAAE,CACH,CACF,CACF,CAAC;AACJ,MAAM,CAAC,MAAM,uBAAuB,GAAG,CACrC,WAAuB,EACvB,cAAgC,EAChC,cAAkC,EAC5B,EAAE;IACR,cAAc,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC;IAC9C,uBAAuB;IACvB,IAAI,cAAc,EAAE;QAClB,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC,WAAW,EAAE,EAAE;YACxD,WAAW,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC,MAAM,EAAE,CAAC;QAC7C,CAAC,CAAC,CAAC;KACJ;AACH,CAAC,CAAC;AAEF,MAAM,CAAC,MAAM,cAAc,GAAG,CAC5B,QAAsB,EACtB,IAA4B,EAC5B,IAA8C,EAC9C,EAAiB,EACjB,0BAAiD,EAC3C,EAAE;IACR,IAAI,IAAI,GAAG,IAAI,CAAC;IAChB,IAAI,CAAC,QAAQ,CAAC,OAAO,EAAE;QACrB,OAAO,CAAC,KAAK,CACX,4EAA4E,CAC7E,CAAC;QACF,OAAO;KACR;IACD,IACE,MAAM,CAAC,SAAS,CAAC,cAAc,CAAC,IAAI,CAClC,QAAQ,CAAC,OAAO,CAAC,WAAW,EAC5B,IAAI,CAAC,WAAW,EAAE,CACnB,EACD;QACA,IAAI,GAAG,QAAQ,CAAC,OAAO,CAAC,WAAW,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,CAAC;KACzD;SAAM;QACL,MAAM,IAAI,KAAK,CAAC,iCAAiC,GAAG,IAAI,CAAC,CAAC;KAC3D;IACD,MAAM,YAAY,GAAG,MAAM,CAAC,MAAM,CAChC,EAAE,EACF,EAAE,WAAW,EAAE,IAAI,EAAE,eAAe,EAAE,IAAI,EAAE,cAAc,EAAE,IAAI,EAAE,CACnE,CAAC;IACF,QAAQ,CAAC,cAAc,CAAC,UAAU,CAAC,YAAY,CAAC,CAAC;IACjD,OAAO,CAAC,GAAG,CAAC,gCAAgC,EAAE,IAAI,GAAG,GAAG,CAAC,CAAC;IAE1D,IAAI,0BAA0B,CAAC,QAAQ,EAAE;QACvC,0BAA0B,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC;KAC9C;IACD,0BAA0B,CAAC,QAAQ,GAAG,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,eAAe,CACrE,QAAQ,CAAC,cAAc,EACvB,iBAAiB,EACjB,CAAC,CAA2C,EAAE,EAAE;QAC9C,uDAAuD;QACvD,CAAC,CAAC,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;QACvB,YAAY,CAAC,WAAW,GAAG,IAAI,CAAC;QAChC,QAAQ,CAAC,cAAc,CAAC,UAAU,CAAC,YAAY,CAAC,CAAC;QACjD,IAAI,CAAC,EAAE,IAAI,0BAA0B,CAAC,MAAM,EAAE;YAC5C,0BAA0B,CAAC,MAAM,GAAG,KAAK,CAAC;YAC1C,OAAO;SACR;QACD,IAAI,IAAI,KAAK,UAAU,IAAI,IAAI,KAAK,SAAS,EAAE;YAC7C,MAAM,OAAO,GAAG,CAAC,CAAC,OAAqC,CAAC;YACxD,MAAM,IAAI,GAAG,oBAAoB,CAAC,OAAO,CAAC,OAAO,EAAE,CAAC,CAAC;YACrD,IAAI,EAAE,EAAE;gBACN,EAAE,CAAC,IAA0B,EAAE,OAAO,CAAC,CAAC;aACzC;SACF;aAAM,IAAI,IAAI,KAAK,QAAQ,EAAE;YAC5B,MAAM,OAAO,GAAG,CAAC,CAAC,OAAqB,CAAC;YACxC,MAAM,GAAG,GAAG,OAAO,CAAC,WAAW,EAAE,CAAC;YAClC,EAAE,CAAC,CAAC,GAAG,CAAC,GAAG,EAAE,EAAE,GAAG,CAAC,GAAG,EAAE,CAAC,EAAE,OAAO,CAAC,CAAC;SACrC;aAAM;YACL,EAAE,CAAC,IAAI,EAAE,CAAC,CAAC,OAAc,CAAC,CAAC;SAC5B;IACH,CAAC,CACF,CAAC;AACJ,CAAC,CAAC;AAEF,MAAM,CAAC,MAAM,cAAc,GAAG,CAC5B,QAAsB,EACtB,0BAAiD,EACjD,MAAe,EACf,SAAkB,EACZ,EAAE;IACR,IAAI,SAAS,EAAE;QACb,OAAO,CAAC,GAAG,CAAC,2BAA2B,EAAE,SAAS,CAAC,CAAC;KACrD;IACD,0BAA0B,CAAC,MAAM,GAAG,MAAM,CAAC;IAC3C,IAAI,QAAQ,CAAC,OAAO,EAAE;QACpB,QAAQ,CAAC,cAAc,CAAC,UAAU,CAAC,EAAE,WAAW,EAAE,IAAI,EAAE,CAAC,CAAC;KAC3D;IACD,IAAI,0BAA0B,CAAC,QAAQ,EAAE;QACvC,0BAA0B,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC;QAC7C,OAAO,0BAA0B,CAAC,QAAQ,CAAC;KAC5C;AACH,CAAC,CAAC;AAEF,MAAM,CAAC,MAAM,cAAc,GAAG,CAC5B,QAAsB,EACtB,GAAoB,EACpB,WAAuB,EACvB,OAAqB,EACrB,eAA+B,EAC/B,cAAiC,EACjC,0BAAiD,EACjD,WAA4B,EAC5B,0BAAiD,EACjD,EAAoD,EAC9C,EAAE;IACR,IACE,CAAC,MAAM,CAAC,SAAS,CAAC,cAAc,CAAC,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,WAAW,CAAC,EACxE;QACA,OAAO,CAAC,KAAK,CACX,+DAA+D,EAC/D,WAAW,CACZ,CAAC;QACF,OAAO;KACR;IACD,aAAa;IACb,mBAAmB;IACnB,yEAAyE;IACzE,OAAO;IACP,YAAY;IACZ,IAAI;IACJ,cAAc,CAAC,QAAQ,EAAE,0BAA0B,EAAE,IAAI,EAAE,gBAAgB,CAAC,CAAC;IAC7E,MAAM,QAAQ,GAAG,WAAW,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC;IACnD,MAAM,IAAI,GAAG;QACX,SAAS,EAAE,KAAK;QAChB,QAAQ,EAAE,KAAK;KAChB,CAAC;IACF,QAAQ,CAAC,SAAS,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;IAEpC,MAAM,IAAI,GAAG,QAAQ,CAAC,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC;IAC3C,OAAO,CAAC,OAAO,GAAG,IAAI,CAAC;IACvB,OAAO,CAAC,EAAE,GAAG,WAAW,CAAC;IACzB,OAAO,CAAC,OAAO,GAAG,EAAE,CAAC;IACrB,OAAO,CAAC,GAAG,GAAG,IAAW,CAAC;IAC1B,IAAI,CAAC,MAAM,CAAC,cAAc,CAAC,IAAI,CAAC,eAAe,EAAE,gBAAgB,CAAC,EAAE;QAClE,MAAM,IAAI,GAAG;YACX,QAAQ,EAAE,cAAc;YACxB,IAAI,EAAE;gBACJ,GAAG,EAAE,gBAAgB;aACtB;YACD,MAAM,EAAE,sBAAsB;YAC9B,OAAO,EAAE,KAAK;YACd,SAAS,EAAE,KAAK;YAChB,QAAQ,EAAE,KAAK;YACf,SAAS,EAAE,KAAK;SACjB,CAAC;QACF,MAAM,cAAc,GAAG;YACrB,SAAS,EAAE,IAAI,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC;YAC9C,OAAO,EAAE,IAAI;SACd,CAAC;QACF,cAAc,CAAC,SAAS,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;QACrC,eAAe,CAAC,cAAc,GAAG,cAAc,CAAC;KACjD;IACD,OAAO,CAAC,GAAG,CAAC,oCAAoC,GAAG,WAAW,CAAC,CAAC;IAChE,0BAA0B,CAAC,QAAQ,GAAG,CAAC,KAAK,EAAE,EAAE;QAC9C,IAAI,EAAE,EAAE;YACL,EAAU,CAAC,KAAK,CAAC,CAAC;SACpB;IACH,CAAC,CAAC;AACJ,CAAC,CAAC;AACF,MAAM,CAAC,MAAM,qBAAqB,GAAG,CACnC,WAAmC,EACnC,WAAuB,EACvB,OAAqB,EACrB,eAA+B,EACzB,EAAE;IACR,IAAI,CAAC,OAAO,CAAC,OAAO,IAAI,CAAC,OAAO,CAAC,EAAE,EAAE;QACnC,qDAAqD;QACrD,OAAO;KACR;IACD,MAAM,QAAQ,GAAG,WAAW,CAAC,QAAQ,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC;IAClD,IAAI,CAAC,QAAQ,EAAE;QACb,OAAO,CAAC,GAAG,CACT,6EAA6E,CAC9E,CAAC;QACF,OAAO;KACR;IACD,MAAM,WAAW,GAAG;QAClB,GAAG,EAAE,WAAW,CAAC,MAAM,CAAC,GAAG,EAAE;QAC7B,GAAG,EAAE,WAAW,CAAC,MAAM,CAAC,GAAG,EAAE;KAC9B,CAAC;IACF,IAAI,aAAa,GAAG,CAAC,CAAC;IACtB,IAAI,YAAY,GAAG,QAAQ,CAAC;IAC5B,oDAAoD;IACpD,QAAQ,CAAC,SAAS,CAAC,OAAO,EAAE,CAAC,OAAO,CAAC,CAAC,KAAK,EAAE,CAAS,EAAE,EAAE;QACxD,MAAM,IAAI,GAAG,iBAAiB,CAAC,WAAW,EAAE;YAC1C,GAAG,EAAE,KAAK,CAAC,GAAG,EAAE;YAChB,GAAG,EAAE,KAAK,CAAC,GAAG,EAAE;SACjB,CAAC,CAAC;QACH,IAAI,IAAI,GAAG,YAAY,EAAE;YACvB,aAAa,GAAG,CAAC,CAAC;YAClB,YAAY,GAAG,IAAI,CAAC;SACrB;IACH,CAAC,CAAC,CAAC;IACH,MAAM,IAAI,GAAG,QAAQ,CAAC,SAAS,CAAC,OAAO,EAAE,CAAC,QAAQ,EAAE,CAAC;IACrD,IACE,YAAY,GAAG,qBAAqB;QACpC,aAAa,GAAG,CAAC;QACjB,aAAa,GAAG,IAAI,CAAC,MAAM,GAAG,CAAC,EAC/B;QACA,eAAe,CAAC,cAAc,CAAC,SAAS,CAAC,UAAU,CAAC;YAClD,QAAQ,EAAE;gBACR,GAAG,EAAE,IAAI,CAAC,aAAa,CAAC,CAAC,GAAG,EAAE;gBAC9B,GAAG,EAAE,IAAI,CAAC,aAAa,CAAC,CAAC,GAAG,EAAE;aAC/B;YACD,OAAO,EAAE,IAAI;SACd,CAAC,CAAC;KACJ;SAAM;QACL,eAAe,CAAC,cAAc,CAAC,SAAS,CAAC,UAAU,CAAC;YAClD,OAAO,EAAE,KAAK;SACf,CAAC,CAAC;KACJ;AACH,CAAC,CAAC;AACF,MAAM,CAAC,MAAM,YAAY,GAAG,CAC1B,WAAmC,EACnC,GAAoB,EACpB,WAAuB,EACvB,OAAqB,EACrB,eAA+B,EACzB,EAAE;IACR,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE;QACpB,OAAO;KACR;IACD,IAAI,CAAC,OAAO,CAAC,EAAE,EAAE;QACf,OAAO,CAAC,KAAK,CAAC,0CAA0C,CAAC,CAAC;QAC1D,OAAO;KACR;IACD,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE;QACpB,OAAO,CAAC,KAAK,CAAC,oDAAoD,CAAC,CAAC;QACpE,OAAO;KACR;IACD,IAAI,CAAC,OAAO,CAAC,GAAG,IAAI,OAAO,CAAC,GAAG,CAAC,MAAM,GAAG,CAAC,EAAE;QAC1C,OAAO,CAAC,KAAK,CACX,0DAA0D,EAC1D,OAAO,CACR,CAAC;QACF,OAAO;KACR;IACD,qDAAqD;IACrD,6CAA6C;IAC7C,MAAM,WAAW,GAAG;QAClB,GAAG,EAAE,WAAW,CAAC,MAAM,CAAC,GAAG,EAAE;QAC7B,GAAG,EAAE,WAAW,CAAC,MAAM,CAAC,GAAG,EAAE;KAC9B,CAAC;IACF,IAAI,aAAa,GAAG,CAAC,CAAC;IACtB,IAAI,YAAY,GAAG,QAAQ,CAAC;IAC5B,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,KAAU,EAAE,CAAS,EAAE,EAAE;QAC5C,MAAM,IAAI,GAAG,iBAAiB,CAAC,WAAW,EAAE,KAAK,CAAC,CAAC;QACnD,IAAI,IAAI,GAAG,YAAY,EAAE;YACvB,aAAa,GAAG,CAAC,CAAC;YAClB,YAAY,GAAG,IAAI,CAAC;SACrB;IACH,CAAC,CAAC,CAAC;IACH,IAAI,YAAY,GAAG,qBAAqB,EAAE;QACxC,iDAAiD;QACjD,OAAO;KACR;IACD,IAAI,aAAa,KAAK,CAAC,IAAI,aAAa,KAAK,OAAO,CAAC,GAAG,CAAC,MAAM,GAAG,CAAC,EAAE;QACnE,iDAAiD;QACjD,OAAO;KACR;IACD,MAAM,yBAAyB,GAAG,OAAO,CAAC,OAAO,CAAC,SAAS,CACzD,CAAC,KAAK,EAAE,EAAE,CAAC,aAAa,KAAK,KAAK,CACnC,CAAC;IACF,IAAI,yBAAyB,GAAG,CAAC,CAAC,EAAE;QAClC,8DAA8D;QAC9D,OAAO,CAAC,OAAO,CAAC,MAAM,CAAC,yBAAyB,EAAE,CAAC,CAAC,CAAC;QACrD,IACE,MAAM,CAAC,SAAS,CAAC,cAAc,CAAC,IAAI,CAClC,eAAe,EACf,QAAQ,GAAG,aAAa,CACzB,EACD;YACA,4CAA4C;YAC5C,eAAe,CAAC,QAAQ,GAAG,aAAa,CAAC,CAAC,SAAS,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;YACjE,OAAO,eAAe,CAAC,QAAQ,GAAG,aAAa,CAAC,CAAC;SAClD;KACF;SAAM;QACL,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;QACpC,MAAM,IAAI,GAAG;YACX,QAAQ,EAAE,OAAO,CAAC,GAAG,CAAC,aAAa,CAAC;YACpC,IAAI,EAAE;gBACJ,GAAG,EAAE,WAAW;aACjB;YACD,MAAM,EAAE,gBAAgB;YACxB,OAAO,EAAE,IAAI;YACb,SAAS,EAAE,KAAK;YAChB,QAAQ,EAAE,KAAK;YACf,SAAS,EAAE,KAAK;SACjB,CAAC;QACF,MAAM,UAAU,GAAG;YACjB,SAAS,EAAE,IAAI,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC;YAC9C,OAAO,EAAE,IAAI;SACd,CAAC;QACF,UAAU,CAAC,SAAS,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;QACjC,eAAe,CAAC,QAAQ,GAAG,aAAa,CAAC,GAAG,UAAU,CAAC;KACxD;AACH,CAAC,CAAC;AACF,MAAM,CAAC,MAAM,mBAAmB,GAAG,CACjC,WAAuB,EACvB,OAAqB,EACrB,eAA+B,EAC/B,0BAAiD,EAC3B,EAAE;IACxB,IAAI,CAAC,OAAO,IAAI,OAAO,CAAC,EAAE,KAAK,IAAI,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE;QACvD,OAAO,EAAE,CAAC;KACX;IACD,OAAO,CAAC,OAAO,GAAG,KAAK,CAAC;IACxB,MAAM,OAAO,GAAG,OAAO,CAAC,OAAO,CAAC;IAChC,MAAM,QAAQ,GAAG,WAAW,CAAC,QAAQ,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC;IAClD,IAAI,CAAC,QAAQ,EAAE;QACb,IAAI,0BAA0B,CAAC,QAAQ,EAAE;YACvC,0BAA0B,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;YAC1C,OAAO,0BAA0B,CAAC,QAAQ,CAAC;SAC5C;QACD,OAAO,EAAE,CAAC;KACX;IACD,OAAO,CAAC,EAAE,GAAG,IAAI,CAAC;IAClB,OAAO,CAAC,OAAO,GAAG,IAAI,CAAC;IACvB,MAAM,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC,OAAO,CAAC,CAAC,SAAS,EAAE,EAAE;QACjD,qCAAqC;QACrC,eAAe,CAAC,SAAS,CAAC,CAAC,SAAS,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;QAClD,OAAO,eAAe,CAAC,SAAS,CAAC,CAAC;IACpC,CAAC,CAAC,CAAC;IAEH,IAAI,CAAC,OAAO,IAAI,OAAO,CAAC,MAAM,KAAK,CAAC,EAAE;QACpC,qCAAqC;QACrC,IAAI,0BAA0B,CAAC,QAAQ,EAAE;YACvC,0BAA0B,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;YAC1C,OAAO,0BAA0B,CAAC,QAAQ,CAAC;SAC5C;QACD,OAAO,EAAE,CAAC;KACX;IAED,MAAM,IAAI,GAAG,OAAO,CAAC,GAAG,CAAC;IACzB,OAAO,CAAC,IAAI,EAAE,CAAC;IACf,qEAAqE;IACrE,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;IAC9B,MAAM,kBAAkB,GAAyB,EAAE,CAAC;IACpD,IAAI,UAAU,GAAG,CAAC,CAAC;IACnB,OAAO,CAAC,OAAO,CAAC,CAAC,KAAK,EAAE,EAAE;QACxB,MAAM,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,UAAU,EAAE,KAAK,CAAC,CAAC;QAC9C,0BAA0B;QAC1B,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;QAC1B,kBAAkB,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QACjC,UAAU,GAAG,KAAK,CAAC;IACrB,CAAC,CAAC,CAAC;IACH,IAAI,0BAA0B,CAAC,QAAQ,EAAE;QACvC,0BAA0B,CAAC,QAAQ,CAAC,kBAAkB,CAAC,CAAC;QACxD,OAAO,0BAA0B,CAAC,QAAQ,CAAC;KAC5C;IACD,OAAO,kBAAkB,CAAC;AAC5B,CAAC,CAAC;AACF,MAAM,CAAC,MAAM,iBAAiB,GAAG,CAC/B,WAAuB,EACvB,OAAqB,EACrB,eAA+B,EAC/B,0BAAiD,EAC3C,EAAE;IACR,OAAO,CAAC,OAAO,GAAG,KAAK,CAAC;IACxB,MAAM,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC,OAAO,CAAC,CAAC,SAAS,EAAE,EAAE;QACjD,qCAAqC;QACrC,eAAe,CAAC,SAAS,CAAC,CAAC,SAAS,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;QAClD,OAAO,eAAe,CAAC,SAAS,CAAC,CAAC;IACpC,CAAC,CAAC,CAAC;IACH,qBAAqB;IACrB,sEAAsE;IACtE,YAAY;IACZ,IAAI;IACJ,qDAAqD;IACrD,kBAAkB;IAClB,mBAAmB;IACnB,uBAAuB;IACvB,sBAAsB;IACtB,OAAO;IACP,yCAAyC;IACzC,IAAI;IACJ,OAAO,CAAC,EAAE,GAAG,IAAI,CAAC;IAClB,OAAO,CAAC,OAAO,GAAG,IAAI,CAAC;IACvB,IAAI,0BAA0B,CAAC,QAAQ,EAAE;QACvC,OAAO,0BAA0B,CAAC,QAAQ,CAAC;KAC5C;AACH,CAAC,CAAC","file":"map_functions.js","sourcesContent":["import * as internal_helpers from \"./internal_helpers\";\nimport { haversineDistance, MVCArrayToCoordArray } from \"./external_helpers\";\nimport {\n  CUTTING_SNAP_DISTANCE,\n  Z_INDEX_SCISSORS,\n  Z_INDEX_SCISSORS_HOVER,\n} from \"./constants\";\nimport ScissorIcon from \"./img/marker_scissors.svg\";\nimport ScissorHoverIcon from \"./img/marker_scissors_hover.svg\";\nimport {\n  GMW_LatLngLiteral,\n  GMW_LatLng,\n  GMW_MarkerOptionsSet,\n  GMW_PolylineOptions,\n  GMW_PolygonOptions,\n  GMW_Polygon,\n  GMW_Polyline,\n  GMW_Marker,\n  GMW_WrappedMarker,\n  GMW_DrawingCB,\n  GMW_Services,\n  GMW_LatLngBoundsLiteral,\n  GMW_LatLngBounds,\n} from \".\";\nimport { MapObjects, CuttingState, CuttingObjects } from \"./WrappedMapBase\";\n\ninterface DrawingListenerObject {\n  listener?: google.maps.MapsEventListener;\n  cancel: boolean;\n}\ninterface CuttingListenerObject {\n  listener?: (segments: [number, number][][] | null) => void;\n  cancel: boolean;\n}\n\nexport const getBoundsLiteral = (\n  map: google.maps.Map | undefined\n): undefined | { north: number; east: number; south: number; west: number } => {\n  if (!map) {\n    return undefined;\n  }\n  const bounds = map.getBounds();\n  if (!bounds) {\n    return undefined;\n  }\n  const ne = bounds.getNorthEast();\n  const sw = bounds.getSouthWest();\n  return {\n    north: ne.lat(),\n    east: ne.lng(),\n    south: sw.lat(),\n    west: sw.lng(),\n  };\n};\nexport const getBounds = (\n  map: google.maps.Map | undefined\n): undefined | GMW_LatLngBounds => {\n  if (!map) {\n    return undefined;\n  }\n  const bounds = map.getBounds();\n  if (!bounds) {\n    return undefined;\n  }\n  return bounds;\n};\n\n/** Takes a coordinate and center it on the map  */\nexport const setCenter = (\n  map: google.maps.Map | undefined,\n  lat_lng: GMW_LatLngLiteral | GMW_LatLng\n): Promise<void> => {\n  return new Promise((resolve) => {\n    if (map) {\n      map.setCenter(lat_lng);\n    }\n    resolve();\n    return;\n  });\n};\n\nexport const setBounds = (\n  map: google.maps.Map | undefined,\n  bounds: GMW_LatLngBoundsLiteral | GMW_LatLngBounds\n): Promise<void> => {\n  return new Promise((resolve) => {\n    if (map) {\n      map.fitBounds(bounds);\n    }\n    return resolve();\n  });\n};\n\nexport const toPixel = (\n  lat_lng_input: GMW_LatLng | GMW_LatLngLiteral,\n  html_element: any,\n  overlay: google.maps.OverlayView | undefined\n): [number, number] => {\n  if (!overlay) {\n    throw new Error(\"Overlay not loaded when calling toPixel.\");\n  }\n  const node_rect = html_element.getBoundingClientRect();\n  let lat_lng: GMW_LatLng;\n  if (lat_lng_input instanceof google.maps.LatLng) {\n    lat_lng = lat_lng_input;\n  } else {\n    lat_lng = new window.google.maps.LatLng(lat_lng_input);\n  }\n  const pixel_obj = overlay.getProjection().fromLatLngToContainerPixel(lat_lng);\n  return [pixel_obj.x + node_rect.left, pixel_obj.y + node_rect.top];\n};\n\nexport const setZoom = (\n  zoom_level: number,\n  map: google.maps.Map | undefined\n): Promise<void> =>\n  new Promise((resolve) => {\n    map && map.setZoom(zoom_level);\n    resolve();\n    return;\n  });\n\nexport const clearPolylines = (\n  verbose: boolean,\n  map_objects: MapObjects,\n  cutting: CuttingState\n): Promise<boolean[]> => {\n  const promise_arr: Promise<boolean>[] = [];\n  Object.keys(map_objects.polyline).forEach((id) => {\n    promise_arr.push(\n      internal_helpers.unsetMapObject(\n        verbose,\n        map_objects,\n        cutting,\n        \"polyline\",\n        id\n      )\n    );\n  });\n  return Promise.all(promise_arr);\n};\n\nexport const clearPolygons = (\n  verbose: boolean,\n  map_objects: MapObjects,\n  cutting: CuttingState\n): Promise<boolean[]> =>\n  Promise.all(\n    Object.keys(map_objects.polygon).map((id) =>\n      internal_helpers.unsetMapObject(\n        verbose,\n        map_objects,\n        cutting,\n        \"polygon\",\n        id\n      )\n    )\n  );\n\nexport const setMarker = (\n  verbose: boolean,\n  map: google.maps.Map,\n  map_objects: MapObjects,\n  cutting: CuttingState,\n  id: string | number,\n  options: GMW_MarkerOptionsSet\n): Promise<GMW_WrappedMarker> =>\n  internal_helpers.setMarker(verbose, map, map_objects, cutting, id, options);\n\nexport const clearMarkers = (\n  verbose: boolean,\n  map_objects: MapObjects,\n  cutting: CuttingState\n): Promise<boolean[]> =>\n  Promise.all(\n    Object.keys(map_objects.marker).map((id) =>\n      internal_helpers.unsetMapObject(\n        verbose,\n        map_objects,\n        cutting,\n        \"marker\",\n        id\n      )\n    )\n  );\nexport const clearFeatureCollections = (\n  map_objects: MapObjects,\n  features_layer: google.maps.Data,\n  feature_layers: google.maps.Data[]\n): void => {\n  feature_layers.forEach((x) => x.setMap(null));\n  // feature_layers = [];\n  if (features_layer) {\n    Object.keys(map_objects.features).forEach((feature_key) => {\n      map_objects.features[feature_key].remove();\n    });\n  }\n};\n\nexport const setDrawingMode = (\n  services: GMW_Services,\n  type: \"polyline\" | \"polygon\",\n  opts: GMW_PolylineOptions | GMW_PolygonOptions,\n  cb: GMW_DrawingCB,\n  drawing_completed_listener: DrawingListenerObject\n): void => {\n  let mode = null;\n  if (!services.drawing) {\n    console.error(\n      \"MAP: Drawing library not available! Add it to google maps api request url.\"\n    );\n    return;\n  }\n  if (\n    Object.prototype.hasOwnProperty.call(\n      services.drawing.OverlayType,\n      type.toUpperCase()\n    )\n  ) {\n    mode = services.drawing.OverlayType[type.toUpperCase()];\n  } else {\n    throw new Error(\"MAP: Invalid drawing mode type:\" + type);\n  }\n  const drawing_opts = Object.assign(\n    {},\n    { drawingMode: mode, polylineOptions: opts, polygonOptions: opts }\n  );\n  services.drawingManager.setOptions(drawing_opts);\n  console.log(\"MAP: Drawing mode started for:\", type + \".\");\n\n  if (drawing_completed_listener.listener) {\n    drawing_completed_listener.listener.remove();\n  }\n  drawing_completed_listener.listener = google.maps.event.addListenerOnce(\n    services.drawingManager,\n    \"overlaycomplete\",\n    (e: google.maps.drawing.OverlayCompleteEvent) => {\n      // console.log(\"overlay complete\", cb, cancel_drawing);\n      e.overlay.setMap(null);\n      drawing_opts.drawingMode = null;\n      services.drawingManager.setOptions(drawing_opts);\n      if (!cb || drawing_completed_listener.cancel) {\n        drawing_completed_listener.cancel = false;\n        return;\n      }\n      if (type === \"polyline\" || type === \"polygon\") {\n        const overlay = e.overlay as GMW_Polygon | GMW_Polyline;\n        const path = MVCArrayToCoordArray(overlay.getPath());\n        if (cb) {\n          cb(path as [number, number][], overlay);\n        }\n      } else if (type === \"marker\") {\n        const overlay = e.overlay as GMW_Marker;\n        const pos = overlay.getPosition();\n        cb([pos.lat(), pos.lng()], overlay);\n      } else {\n        cb(null, e.overlay as any);\n      }\n    }\n  );\n};\n\nexport const endDrawingMode = (\n  services: GMW_Services,\n  drawing_completed_listener: DrawingListenerObject,\n  cancel: boolean,\n  debug_src?: string\n): void => {\n  if (debug_src) {\n    console.log(\"endDrawingMode debug src:\", debug_src);\n  }\n  drawing_completed_listener.cancel = cancel;\n  if (services.drawing) {\n    services.drawingManager.setOptions({ drawingMode: null });\n  }\n  if (drawing_completed_listener.listener) {\n    drawing_completed_listener.listener.remove();\n    delete drawing_completed_listener.listener;\n  }\n};\n\nexport const setCuttingMode = (\n  services: GMW_Services,\n  map: google.maps.Map,\n  map_objects: MapObjects,\n  cutting: CuttingState,\n  cutting_objects: CuttingObjects,\n  default_center: GMW_LatLngLiteral,\n  drawing_completed_listener: DrawingListenerObject,\n  polyline_id: string | number,\n  cutting_completed_listener: CuttingListenerObject,\n  cb?: (segments: [number, number][][] | null) => void\n): void => {\n  if (\n    !Object.prototype.hasOwnProperty.call(map_objects.polyline, polyline_id)\n  ) {\n    console.error(\n      \"MAP: Cannot set cutting mode, provided object id not on map: \",\n      polyline_id\n    );\n    return;\n  }\n  // if (!cb) {\n  //   console.error(\n  //     \"MAP: Cannot setCuttingMode without supplying completed callback.\"\n  //   );\n  //   return;\n  // }\n  endDrawingMode(services, drawing_completed_listener, true, \"setCuttingMode\");\n  const polyline = map_objects.polyline[polyline_id];\n  const opts = {\n    clickable: false,\n    editable: false,\n  };\n  polyline.gmaps_obj.setOptions(opts);\n\n  const path = polyline.options.default.path;\n  cutting.enabled = true;\n  cutting.id = polyline_id;\n  cutting.indexes = [];\n  cutting.arr = path as any;\n  if (!Object.hasOwnProperty.call(cutting_objects, \"hover_scissors\")) {\n    const opts = {\n      position: default_center,\n      icon: {\n        url: ScissorHoverIcon,\n      },\n      zIndex: Z_INDEX_SCISSORS_HOVER,\n      visible: false,\n      clickable: false,\n      editable: false,\n      draggable: false,\n    };\n    const hover_scissors = {\n      gmaps_obj: new window.google.maps.Marker(opts),\n      options: opts,\n    };\n    hover_scissors.gmaps_obj.setMap(map);\n    cutting_objects.hover_scissors = hover_scissors;\n  }\n  console.log(\"MAP: Cutting mode started for id: \" + polyline_id);\n  cutting_completed_listener.listener = (value) => {\n    if (cb) {\n      (cb as any)(value);\n    }\n  };\n};\nexport const cuttingPositionUpdate = (\n  mouse_event: google.maps.MouseEvent,\n  map_objects: MapObjects,\n  cutting: CuttingState,\n  cutting_objects: CuttingObjects\n): void => {\n  if (!cutting.enabled || !cutting.id) {\n    //If we are not in cutting mode ignore function call.\n    return;\n  }\n  const polyline = map_objects.polyline[cutting.id];\n  if (!polyline) {\n    console.log(\n      \"GMW: Could not find cutting object, this should not happen! Probably a bug.\"\n    );\n    return;\n  }\n  const mouse_coord = {\n    lat: mouse_event.latLng.lat(),\n    lng: mouse_event.latLng.lng(),\n  };\n  let closest_index = 0;\n  let closest_dist = Infinity;\n  //Find nearest index and move scissors_hover marker.\n  polyline.gmaps_obj.getPath().forEach((point, i: number) => {\n    const dist = haversineDistance(mouse_coord, {\n      lat: point.lat(),\n      lng: point.lng(),\n    });\n    if (dist < closest_dist) {\n      closest_index = i;\n      closest_dist = dist;\n    }\n  });\n  const path = polyline.gmaps_obj.getPath().getArray();\n  if (\n    closest_dist < CUTTING_SNAP_DISTANCE &&\n    closest_index > 0 &&\n    closest_index < path.length - 1\n  ) {\n    cutting_objects.hover_scissors.gmaps_obj.setOptions({\n      position: {\n        lat: path[closest_index].lat(),\n        lng: path[closest_index].lng(),\n      },\n      visible: true,\n    });\n  } else {\n    cutting_objects.hover_scissors.gmaps_obj.setOptions({\n      visible: false,\n    });\n  }\n};\nexport const cuttingClick = (\n  mouse_event: google.maps.MouseEvent,\n  map: google.maps.Map,\n  map_objects: MapObjects,\n  cutting: CuttingState,\n  cutting_objects: CuttingObjects\n): void => {\n  if (!cutting.enabled) {\n    return;\n  }\n  if (!cutting.id) {\n    console.error(\"No cutting.id set when clicking for cut.\");\n    return;\n  }\n  if (!cutting.indexes) {\n    console.error(\"cutting.indexes not defined when clicking for cut.\");\n    return;\n  }\n  if (!cutting.arr || cutting.arr.length < 2) {\n    console.error(\n      \"cutting.path not defined when clicking for cut. Cutting:\",\n      cutting\n    );\n    return;\n  }\n  // const polyline = map_objects.polyline[cutting.id];\n  // const path = polyline.options.path as any;\n  const mouse_coord = {\n    lat: mouse_event.latLng.lat(),\n    lng: mouse_event.latLng.lng(),\n  };\n  let closest_index = 0;\n  let closest_dist = Infinity;\n  cutting.arr.forEach((point: any, i: number) => {\n    const dist = haversineDistance(mouse_coord, point);\n    if (dist < closest_dist) {\n      closest_index = i;\n      closest_dist = dist;\n    }\n  });\n  if (closest_dist > CUTTING_SNAP_DISTANCE) {\n    //Pointer is too far away from any point, ignore.\n    return;\n  }\n  if (closest_index === 0 || closest_index === cutting.arr.length - 1) {\n    //We are never interested in first or last point.\n    return;\n  }\n  const already_selected_position = cutting.indexes.findIndex(\n    (value) => closest_index === value\n  );\n  if (already_selected_position > -1) {\n    //This index has already been selected for cutting, remove it.\n    cutting.indexes.splice(already_selected_position, 1);\n    if (\n      Object.prototype.hasOwnProperty.call(\n        cutting_objects,\n        \"index_\" + closest_index\n      )\n    ) {\n      //We have drawn a marker for cut, remove it.\n      cutting_objects[\"index_\" + closest_index].gmaps_obj.setMap(null);\n      delete cutting_objects[\"index_\" + closest_index];\n    }\n  } else {\n    cutting.indexes.push(closest_index);\n    const opts = {\n      position: cutting.arr[closest_index],\n      icon: {\n        url: ScissorIcon,\n      },\n      zIndex: Z_INDEX_SCISSORS,\n      visible: true,\n      clickable: false,\n      editable: false,\n      draggable: false,\n    };\n    const cut_marker = {\n      gmaps_obj: new window.google.maps.Marker(opts),\n      options: opts,\n    };\n    cut_marker.gmaps_obj.setMap(map);\n    cutting_objects[\"index_\" + closest_index] = cut_marker;\n  }\n};\nexport const completeCuttingMode = (\n  map_objects: MapObjects,\n  cutting: CuttingState,\n  cutting_objects: CuttingObjects,\n  cutting_completed_listener: CuttingListenerObject\n): [number, number][][] => {\n  if (!cutting || cutting.id === null || !cutting.enabled) {\n    return [];\n  }\n  cutting.enabled = false;\n  const indexes = cutting.indexes;\n  const polyline = map_objects.polyline[cutting.id];\n  if (!polyline) {\n    if (cutting_completed_listener.listener) {\n      cutting_completed_listener.listener(null);\n      delete cutting_completed_listener.listener;\n    }\n    return [];\n  }\n  cutting.id = null;\n  cutting.indexes = null;\n  Object.keys(cutting_objects).forEach((marker_id) => {\n    //Remove all cutting related markers.\n    cutting_objects[marker_id].gmaps_obj.setMap(null);\n    delete cutting_objects[marker_id];\n  });\n\n  if (!indexes || indexes.length === 0) {\n    //We made no selections, just return.\n    if (cutting_completed_listener.listener) {\n      cutting_completed_listener.listener(null);\n      delete cutting_completed_listener.listener;\n    }\n    return [];\n  }\n\n  const path = cutting.arr;\n  indexes.sort();\n  //Add last index so that the remaining points form a segment as well.\n  indexes.push(path.length - 1);\n  const resulting_segments: [number, number][][] = [];\n  let prev_index = 0;\n  indexes.forEach((index) => {\n    const segment = path.slice(prev_index, index);\n    //Copy last point as well.\n    segment.push(path[index]);\n    resulting_segments.push(segment);\n    prev_index = index;\n  });\n  if (cutting_completed_listener.listener) {\n    cutting_completed_listener.listener(resulting_segments);\n    delete cutting_completed_listener.listener;\n  }\n  return resulting_segments;\n};\nexport const cancelCuttingMode = (\n  map_objects: MapObjects,\n  cutting: CuttingState,\n  cutting_objects: CuttingObjects,\n  cutting_completed_listener: CuttingListenerObject\n): void => {\n  cutting.enabled = false;\n  Object.keys(cutting_objects).forEach((marker_id) => {\n    //Remove all cutting related markers.\n    cutting_objects[marker_id].gmaps_obj.setMap(null);\n    delete cutting_objects[marker_id];\n  });\n  // if (!cutting.id) {\n  //   console.error(\"No cutting.id set when cancelling cutting mode.\");\n  //   return;\n  // }\n  // const polyline = map_objects.polyline[cutting.id];\n  // if (polyline) {\n  //   const opts = {\n  //     clickable: true,\n  //     editable: true,\n  //   };\n  //   polyline.gmaps_obj.setOptions(opts);\n  // }\n  cutting.id = null;\n  cutting.indexes = null;\n  if (cutting_completed_listener.listener) {\n    delete cutting_completed_listener.listener;\n  }\n};\n"]}