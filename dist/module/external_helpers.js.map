{"version":3,"sources":["module/external_helpers.ts"],"names":[],"mappings":"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","file":"external_helpers.js","sourcesContent":["import proj4 from \"proj4\";\n\ntype Projection = \"GMAPS\" | \"RT90\" | \"SWEREF99\" | \"WGS84\";\n\nconst EARTH_RADIUS = 6378137;\n\n////////////EXPORTED HELPER FUNCTIONS\n//Check Map.helpers for usage.\n\nexport type convertFromArrayOfArrayType = (\n  fromProj: Projection,\n  toProj: Projection,\n  points: [number, number][]\n) => [number, number][];\nexport const convertFromArrayOfArray: convertFromArrayOfArrayType = (\n  fromProj,\n  toProj,\n  points\n) => {\n  return points.map((point) => proj4(fromProj, toProj, point));\n};\n\nexport type arrayToLatLngObjectType = (\n  coords: [number, number][],\n  invert: boolean\n) => LatLngLiteral[];\nexport const arrayToLatLngObject: arrayToLatLngObjectType = (\n  arr,\n  invert = false\n) =>\n  invert\n    ? arr.map((point) => ({ lat: point[1], lng: point[0] }))\n    : arr.map((point) => ({ lat: point[0], lng: point[1] }));\n\nexport type latLngArrayToCoordArrayType = (\n  latLngArray: LatLngLiteral[],\n  invert: boolean\n) => [number, number][];\nexport const latLngArrayToCoordArray: latLngArrayToCoordArrayType = (\n  arr,\n  invert\n) =>\n  invert\n    ? arr.map((point) => [point.lng, point.lat] as [number, number])\n    : arr.map((point) => [point.lat, point.lng] as [number, number]);\n\nexport const makePointsAroundCircleRT90 = (\n  point: number[],\n  r: number,\n  numberOfPoints: number\n): [number, number][] => {\n  //Returns numberOfPoints around circle at p with r radius.\n\n  const points = [];\n  let i;\n\n  for (i = 0; i < numberOfPoints; i += 1) {\n    points.push([\n      point[0] + r * Math.cos((2 * Math.PI * i) / numberOfPoints),\n      point[1] + r * Math.sin((2 * Math.PI * i) / numberOfPoints),\n    ] as [number, number]);\n  }\n\n  return points;\n};\n\nexport type makeRectRT90Type = (\n  p1: number[],\n  p2: number[]\n) => [number, number][];\nexport const makeRectRT90: makeRectRT90Type = (p1, p2) => {\n  //p1 and p2 should be opposite corners of the rectangle.\n  const points = [];\n\n  points.push([p1[0], p1[1]], [p2[0], p1[1]], [p2[0], p2[1]], [p1[0], p2[1]]);\n\n  return points as [number, number][];\n};\n\nexport type movePointsByCoordType = (\n  points_arr: [number, number][],\n  coord: number[]\n) => [number, number][];\nexport const movePointsByCoord: movePointsByCoordType = (\n  points_arr: [number, number][],\n  coord: number[]\n) =>\n  points_arr.map(\n    (point) => [point[0] + coord[0], point[1] + coord[1]] as [number, number]\n  );\n\nconst squared = (x: number): number => x * x;\nconst toRad = (x: number): number => (x * Math.PI) / 180;\nexport type haversineDistanceType = (\n  a: LatLngLiteral,\n  b: LatLngLiteral\n) => number;\nexport const haversineDistance: haversineDistanceType = (a, b) => {\n  const aLat = a.lat;\n  const bLat = b.lat;\n  const aLng = a.lng;\n  const bLng = b.lng;\n  const dLat = toRad(bLat - aLat);\n  const dLon = toRad(bLng - aLng);\n\n  const f =\n    squared(Math.sin(dLat / 2.0)) +\n    Math.cos(toRad(aLat)) *\n      Math.cos(toRad(bLat)) *\n      squared(Math.sin(dLon / 2.0));\n  const c = 2 * Math.atan2(Math.sqrt(f), Math.sqrt(1 - f));\n\n  return EARTH_RADIUS * c;\n};\n\nexport type MVCArrayToObjArrayType = (\n  MVCArr: google.maps.MVCArray<google.maps.LatLng>\n) => LatLngLiteral[];\nexport const MVCArrayToObjArray: MVCArrayToObjArrayType = (MVCArr) => {\n  return MVCArr.getArray().map((gmapsLatLng) => {\n    return {\n      lat: gmapsLatLng.lat(),\n      lng: gmapsLatLng.lng(),\n    };\n  });\n};\n\nexport type MVCArrayToCoordArrayType = (\n  MVCArr: google.maps.MVCArray<google.maps.LatLng>\n) => number[][];\nexport const MVCArrayToCoordArray: MVCArrayToCoordArrayType = (MVCArr) => {\n  return MVCArr.getArray().map((gmapsLatLng) => {\n    return [gmapsLatLng.lat(), gmapsLatLng.lng()];\n  });\n};\n\nexport const arrayRT90ToWGS84 = (\n  rt90arr: [number, number][]\n): [number, number][] => convertFromArrayOfArray(\"RT90\", \"WGS84\", rt90arr);\nexport const arrayRT90ToWGS84LatLngObj = (\n  rt90arr: [number, number][]\n): LatLngLiteral[] =>\n  arrayToLatLngObject(convertFromArrayOfArray(\"RT90\", \"WGS84\", rt90arr), true);\n"]}