{"version":3,"sources":["../src/module/index.tsx"],"names":[],"mappings":"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","file":"index.js","sourcesContent":["import * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport proj4 from 'proj4';\n\nimport ScriptCache from './ScriptCache';\nimport external_helpers, { MVCArrayToCoordArray, MVCArrayToObjArray, movePointsByCoord, makePointsAroundCircleRT90, makeRectRT90, convertFromArrayOfArray, arrayToLatLngObject, latLngArrayToCoordArray, haversineDistance} from './external_helpers';\nimport * as internal_helpers from './internal_helpers';\nlet ScissorIcon = require('./img/marker_scissors.svg');\nlet ScissorHoverIcon = require('./img/marker_scissors_hover.svg');\n\n\ndeclare global {\n    interface Window {\n        google: any;\n        wrapped_gmaps: any;\n    }\n}\n\nexport interface LatLngLiteral {\n    lat: number;\n    lng: number;\n}\nexport interface LatLng extends google.maps.LatLng {}\nexport interface MouseEvent extends google.maps.MouseEvent {}\nexport interface Polyline extends google.maps.Polyline {}\nexport interface PolylineOptions extends google.maps.PolylineOptions {}\nexport interface Polygon extends google.maps.Polygon {}\nexport interface PolygonOptions extends google.maps.PolygonOptions {}\nexport interface Marker extends google.maps.Marker {}\nexport interface MarkerOptions extends google.maps.MarkerOptions {}\n\nexport type MarkerEvents = \"click\" | \"mouseover\" | \"mouseout\" | \"mousedown\" | \"mouseup\" | \"dragstart\" | \"drag\" | \"dragend\" | \"dblclick\" | \"rightclick\";\nexport type PolylineEvents = \"click\" | \"dblclick\" | \"dragstart\" | \"drag\" | \"dragend\" | \"mouseover\" | \"mouseout\" | \"mousedown\" | \"mouseup\" | \"mousemove\" | \"rightclick\" | \"set_at\" | \"remove_at\" | \"insert_at\";\nexport type PolygonEvents = \"click\" | \"dblclick\" | \"dragstart\" | \"drag\" | \"dragend\" | \"mouseover\" | \"mouseout\" | \"mousedown\" | \"mouseup\" | \"mousemove\" | \"rightclick\" | \"set_at\" | \"remove_at\" | \"insert_at\";\nexport type AllMapObjEvents = MarkerEvents | PolylineEvents | PolygonEvents;\nexport interface MapBaseProps {\n    initializedCB?: (this_ref: WrappedMapBase) => void;\n    googleapi_maps_uri: string;\n    id?: string;\n    default_center: LatLngLiteral;\n    default_zoom: number;\n    default_options?: object;\n    onCenterChanged?: () => void;\n    onBoundsChanged?: () => void;\n    onClick?: (e: any) => void;\n    onDoubleClick?: (e: any) => void;\n    onDrag?: () => void;\n    onDragEnd?: () => void;\n    onDragStart?: () => void;\n    onHeadingChanged?: () => void;\n    onIdle?: () => void;\n    onMapTypeIdChanged?: () => void;\n    onMouseMove?: (e: any) => void;\n    onMouseOut?: (e: any) => void;\n    onMouseOver?: (e: any) => void;\n    onProjectionChanged?: () => void;\n    onResize?: () => void;\n    onRightClick?: (e: any) => void;\n    onTilesLoaded?: () => void;\n    onTiltChanged?: () => void;\n    onZoomChanged?: () => void;\n    styles?: object;\n}\n\nexport interface WrappedGmapObj {\n    gmaps_obj?: any;\n    type: MapObjectType;\n    hover: () => void;\n    hovered: boolean;\n    hover_options: any;\n    unhover: () => void;\n    show: () => void;\n    hide: () => void;\n    remove: () => void;\n    _cbs: {\n        [key: string]: (e?: any) => void;\n    };\n    registerEventCB: (event_type: MarkerEvents & PolygonEvents & PolylineEvents, cb: (e?: any) => void) => void;\n    unregisterEventCB: (event_type: MarkerEvents & PolygonEvents & PolylineEvents) => void;\n    options: any;\n    update: (options: any) => Promise<WrappedGmapObj>;\n    updateHover: (options: any) => Promise<WrappedGmapObj>;\n}\n\nexport interface WrappedPolygon extends WrappedGmapObj {\n    gmaps_obj: Polygon;\n    type: \"polygon\";\n    options: PolygonOptions;\n    hover_options: PolygonOptions;\n    update: (options: PolygonOptions) => Promise<WrappedPolygon>;\n    updateHover: (options: PolygonOptions) => Promise<WrappedPolygon>;\n    registerEventCB: (event_type: PolygonEvents, cb: (e?: any) => void) => void;\n    unregisterEventCB: (event_type: PolygonEvents) => void;\n}\nexport interface WrappedPolyline extends WrappedGmapObj {\n    gmaps_obj: Polyline;\n    type: \"polyline\";\n    options: PolylineOptions;\n    hover_options: PolylineOptions;\n    update: (options: PolylineOptions) => Promise<WrappedPolyline>;\n    updateHover: (options: PolylineOptions) => Promise<WrappedPolyline>;\n    registerEventCB: (event_type: PolylineEvents, cb: (e?: any) => void) => void;\n    unregisterEventCB: (event_type: PolylineEvents) => void;\n}\nexport interface WrappedMarker extends WrappedGmapObj {\n    gmaps_obj: Marker;\n    type: \"marker\";\n    options: MarkerOptions;\n    hover_options: MarkerOptions;\n    update: (options: MarkerOptions) => Promise<WrappedMarker>;\n    updateHover: (options: MarkerOptions) => Promise<WrappedMarker>;\n    registerEventCB: (event_type: MarkerEvents, cb: (e?: any) => void) => void;\n    unregisterEventCB: (event_type: MarkerEvents) => void;\n}\n\nexport type AnyObjectOptions = MarkerOptions | PolylineOptions | PolygonOptions;\n\n\nexport type MapObjectType = \"polyline\" | \"polygon\" | \"marker\";\n\n\n\n\nconst CUTTING_SNAP_DISTANCE = 200;\nconst Z_INDEX_SCISSORS = 9001;\nconst Z_INDEX_SCISSORS_HOVER = 9002;\n\nconst PROJECTIONS = {\n    gmaps: '+proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0.0 +k=1.0 +units=m +nadgrids=@null +wktext +no_defs +over',\n    rt90: '+proj=tmerc +lat_0=0 +lon_0=15.80827777777778 +k=1 +x_0=1500000 +y_0=0 +ellps=bessel +towgs84=414.1,41.3,603.1,-0.855,2.141,-7.023,0 +units=m +no_defs',\n    sweref99: '+proj=tmerc +lat_0=0 +lon_0=15.80628452944445 +k=1.00000561024 +x_0=1500064.274 +y_0=-667.711 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs',\n};\nproj4.defs('GMAPS', PROJECTIONS.gmaps);\nproj4.defs('RT90', PROJECTIONS.rt90);\nproj4.defs('SWEREF99', PROJECTIONS.sweref99);\n\nexport default class WrappedMapBase extends React.Component<MapBaseProps, any> {\n\n    do_after_init: (() => void)[] = [];\n    do_on_drag_end: (() => void)[] = [];\n    do_on_drag_start: (() => void)[] = [];\n    drawing_completed_listener: google.maps.MapsEventListener | null = null;\n    map: google.maps.Map | null = null;\n    initialized: boolean = false;\n    map_objects: {\n        marker: {\n            [key: string]: WrappedMarker;\n        }\n        polygon: {\n            [key: string]: WrappedPolygon;\n        }\n        polyline: {\n            [key: string]: WrappedPolyline;\n        }\n    } = {\n        marker: {},\n        polygon: {},\n        polyline: {}\n    };\n    cutting_objects: {\n        [key: string]: any;\n        hover_scissors?: any;\n    } = {};\n    overlay: google.maps.OverlayView | null = null;\n    cutting: {\n        enabled: boolean,\n        id: string | null,\n        indexes: number[] | null,\n        arr?: [number, number][]\n    } = {\n        enabled: false,\n        id: null,\n        indexes: null\n    };\n    cutting_completed_listener: ((segments: [number, number][][] | null) => void) | null = null;\n    cancel_drawing: boolean = false;\n    helpers: {\n        rt90: {\n            pointsAroundCircle: makePointsAroundCircleRT90;\n            makeRect: makeRectRT90;\n            arrayRT90ToWGS84: (rt90_array: [number, number][]) => [number, number][];\n            arrayRT90ToWGS84LatLngObj: (rt90_array: [number, number][]) => LatLngLiteral[];\n            movePointsByCoord: movePointsByCoord;\n        };\n        arrToLatLngObj: arrayToLatLngObject;\n        latlngArrayToCoordArray: latLngArrayToCoordArray;\n        convertFromArrayOfArray: convertFromArrayOfArray;\n        haversineDistance: haversineDistance;\n        MVCArrayToCoordArray: MVCArrayToCoordArray;\n        MVCArrayToObjArray: MVCArrayToObjArray;\n    };\n    script_cache: any;\n    html_element: any;\n    services: any;\n\n\n\n\n\n\n\n    constructor(props: MapBaseProps) {\n        super(props);\n\n        this.cutting = {\n            enabled: false,\n            id: null,\n            indexes: null,\n        };\n\n        this.helpers = {\n            rt90: {\n                pointsAroundCircle: external_helpers.makePointsAroundCircleRT90,\n                makeRect: external_helpers.makeRectRT90,\n                arrayRT90ToWGS84: (rt90arr) => { return external_helpers.convertFromArrayOfArray(\"RT90\", \"WGS84\", rt90arr); },\n                arrayRT90ToWGS84LatLngObj: (rt90arr) => { return external_helpers.arrayToLatLngObject(external_helpers.convertFromArrayOfArray(\"RT90\", \"WGS84\", rt90arr), true); },\n                movePointsByCoord: external_helpers.movePointsByCoord\n            },\n            arrToLatLngObj: external_helpers.arrayToLatLngObject,\n            latlngArrayToCoordArray: external_helpers.latLngArrayToCoordArray,\n            convertFromArrayOfArray: external_helpers.convertFromArrayOfArray,\n            haversineDistance: external_helpers.haversineDistance,\n            MVCArrayToCoordArray: external_helpers.MVCArrayToCoordArray,\n            MVCArrayToObjArray: external_helpers.MVCArrayToObjArray\n        };\n    }\n\n    componentWillMount() {\n        this.script_cache = ScriptCache({\n            google: this.props.googleapi_maps_uri\n        });\n    }\n\n    componentWillUnmount() {\n        if (this.map && this.initialized) {\n            window.google.maps.event.clearInstanceListeners(this.map);\n        }\n    }\n\n    componentDidMount() {\n        const refs = this.refs;\n        if (this.props.id) {\n            if (window.hasOwnProperty(\"allbin_gmaps\")) {\n                window.wrapped_gmaps[this.props.id] = this;\n            }\n        }\n        this.script_cache.google.onLoad((err: any) => {\n\n            function CanvasProjectionOverlay() { }\n            CanvasProjectionOverlay.prototype = new window.google.maps.OverlayView();\n            CanvasProjectionOverlay.prototype.constructor = CanvasProjectionOverlay;\n            CanvasProjectionOverlay.prototype.onAdd = function () { };\n            CanvasProjectionOverlay.prototype.draw = function () { };\n            CanvasProjectionOverlay.prototype.onRemove = function () { };\n\n            const mapRef = refs.map;\n            this.html_element = ReactDOM.findDOMNode(mapRef);\n\n            let center = this.props.default_center;\n            if (!center) {\n                throw new Error(\"Could not create map: Requires 'default_center' prop.\");\n            }\n            let zoom = (typeof this.props.default_zoom !== \"undefined\") ? this.props.default_zoom : null;\n            if (!zoom) {\n                throw new Error(\"Could not create map: Requires 'default_zoom' prop.\");\n            }\n            if (!this.props.googleapi_maps_uri) {\n                throw new Error(\"Could not create map: Requires 'googleapi_maps_uri' prop. Ex: https://maps.googleapis.com/maps/api/js?v=3.exp&libraries=geometry,places,drawing&key=XXXXXXXXXX\");\n            }\n            let defaults = this.props.default_options || {};\n            let mapConfig = Object.assign(\n                {},\n                defaults,\n                {\n                center: new window.google.maps.LatLng(center.lat, center.lng),\n                zoom: zoom,\n                gestureHandling: 'greedy',\n                styles: this.props.styles || {}\n            });\n            const maps = window.google.maps;\n\n            this.map = new maps.Map(this.html_element, mapConfig);\n            this.services = {\n                geocoderService: new window.google.maps.Geocoder(),\n                directionsService: new window.google.maps.DirectionsService(),\n            };\n            if (window.google.maps.drawing) {\n                this.services.drawing = window.google.maps.drawing;\n                this.services.drawingManager = new window.google.maps.drawing.DrawingManager({\n                    drawingMode: null,\n                    drawingControl: false,\n                    drawingControlOptions: {\n                        drawingModes: []\n                    }\n                });\n                this.services.drawingManager.setMap(this.map);\n            }\n\n            this.overlay = new (CanvasProjectionOverlay as any)();\n            if (this.overlay) {\n                this.overlay.setMap(this.map);\n            }\n            if (!this.map) {\n                throw new Error(\"Tried to setup events before map instance was defined.\");\n            }\n            this.setupMapEvents(this.map);\n\n            window.google.maps.event.addListenerOnce(this.map, 'idle', () => { this.doAfterInit(); });\n        });\n    }\n\n    doAfterInit(): void {\n        this.initialized = true;\n        this.do_after_init.forEach((cb) => {\n            cb();\n        });\n\n        if (this.props.initializedCB) {\n            //Tell parent we are initialized if the parent has asked for it.\n            this.props.initializedCB(this);\n        }\n    }\n\n    setCenter(latLng: LatLngLiteral | LatLng): Promise<void> {\n        return new Promise((resolve, reject) => {\n            if (!this.initialized) {\n                this.do_after_init.push(() => {\n                    this.setCenter(latLng).then((res) => {\n                        resolve(res);\n                    }).catch((err) => {\n                        reject(err);\n                    });\n                });\n                return;\n            }\n            if (this.map) {\n                this.map.setCenter(latLng);\n            }\n            resolve();\n            return;\n        });\n    }\n\n    fitToBoundsArray(arr_of_coords: [number, number][]) {\n        return internal_helpers.fitToBoundsOfArray(this, arr_of_coords);\n    }\n    fitToBoundsObjectArray(arr_of_objects: LatLngLiteral[]) {\n        return internal_helpers.fitToBoundsOfObjectArray(this, arr_of_objects);\n    }\n\n    fromLatLngToPixel(map_ref: WrappedMapBase, latLng: LatLng) {\n        return internal_helpers.fromLatLngToPixel(this, latLng);\n    }\n\n    toPixel(lat_lng_input: LatLng|LatLngLiteral): [number, number] {\n        if (!this.overlay) {\n            throw new Error(\"Overlay not loaded when calling toPixel.\");\n        }\n        let node_rect = this.html_element.getBoundingClientRect();\n        let lat_lng: LatLng;\n        if (lat_lng_input instanceof google.maps.LatLng) {\n            lat_lng = lat_lng_input;\n        } else {\n            lat_lng = new window.google.maps.LatLng(lat_lng_input);\n        }\n        let pixel_obj = this.overlay.getProjection().fromLatLngToContainerPixel(lat_lng);\n        return [pixel_obj.x + node_rect.left, pixel_obj.y + node_rect.top];\n    }\n\n    setZoom(zoom_level: number): Promise<void> {\n        return new Promise((resolve, reject) => {\n            if (!this.initialized) {\n                this.do_after_init.push(() => {\n                    this.setZoom(zoom_level).then((res) => {\n                        resolve(res);\n                    }).catch((err) => {\n                        reject(err);\n                    });\n                });\n                return;\n            }\n            if (this.map) {\n                this.map.setZoom(zoom_level);\n            }\n            resolve();\n            return;\n        });\n    }\n\n    setPolyline(id: string, options: PolylineOptions, hover_options: PolylineOptions | null = null): Promise<WrappedPolyline> {\n        return internal_helpers.setPolyline(this, id, options, hover_options);\n    }\n    unsetPolyline(id: string): Promise<boolean> {\n        return internal_helpers.unsetMapObject(this, \"polyline\", id);\n    }\n    clearPolylines(): Promise<boolean[]> {\n        let promise_arr: Promise<boolean>[] = [];\n        Object.keys(this.map_objects.polyline).forEach((id) => {\n            promise_arr.push(internal_helpers.unsetMapObject(this, \"polyline\", id));\n        });\n        return Promise.all(promise_arr);\n    }\n\n    setPolygon(id: string, options: PolygonOptions, hover_options: PolygonOptions | null = null): Promise<WrappedPolygon> {\n        return internal_helpers.setPolygon(this, id, options, hover_options);\n    }\n    unsetPolygon(id: string): Promise<boolean> {\n        return internal_helpers.unsetMapObject(this, \"polygon\", id);\n    }\n    clearPolygons(): Promise<boolean[]> {\n        let promise_arr: Promise<boolean>[] = [];\n        Object.keys(this.map_objects.polygon).forEach((id) => {\n            promise_arr.push(internal_helpers.unsetMapObject(this, \"polygon\", id));\n        });\n        return Promise.all(promise_arr);\n    }\n\n    setMarker(id: string, options: MarkerOptions, hover_options: MarkerOptions | null = null): Promise<WrappedMarker> {\n        return internal_helpers.setMarker(this, id, options, hover_options);\n    }\n    unsetMarker(id: string): Promise<boolean> {\n        return internal_helpers.unsetMapObject(this, \"marker\", id);\n    }\n    clearMarkers(): Promise<boolean[]> {\n        let promise_arr: Promise<boolean>[] = [];\n        Object.keys(this.map_objects.marker).forEach((id) => {\n            promise_arr.push(internal_helpers.unsetMapObject(this, \"marker\", id));\n        });\n        return Promise.all(promise_arr);\n    }\n\n\n    registerDragEndCB(cb: () => void): void {\n        //Is actually triggered by Idle, not DragEnd!\n        this.do_on_drag_end.push(cb);\n    }\n    unregisterDragEndCB(cb: () => void): void {\n        let index = this.do_on_drag_end.indexOf(cb);\n        if (index > -1) {\n            this.do_on_drag_end.splice(index, 1);\n        }\n    }\n    registerDragStartCB(cb: () => void): void {\n        this.do_on_drag_end.push(cb);\n    }\n    unregisterDragStartCB(cb: () => void): void {\n        let index = this.do_on_drag_start.indexOf(cb);\n        if (index > -1) {\n            this.do_on_drag_start.splice(index, 1);\n        }\n    }\n    setupMapEvents(map: google.maps.Map) {\n        map.addListener('center_changed', () => {\n            if (this.props.onCenterChanged) {\n                this.props.onCenterChanged();\n            }\n        });\n        map.addListener('bounds_changed', () => {\n            if (this.props.onBoundsChanged) {\n                this.props.onBoundsChanged();\n            }\n        });\n        map.addListener('click', (mouse_event) => {\n            if (this.cutting.enabled) {\n                this.cuttingClick(mouse_event);\n            }\n            if (this.props.onClick && !this.cutting.enabled) {\n                this.props.onClick(mouse_event);\n            }\n        });\n        map.addListener('dblclick', (mouse_event) => {\n            if (this.props.onDoubleClick && !this.cutting.enabled) {\n                this.props.onDoubleClick(mouse_event);\n            }\n        });\n        map.addListener('drag', () => {\n            if (this.props.onDrag && !this.cutting.enabled) {\n                this.props.onDrag();\n            }\n        });\n        map.addListener('dragend', () => {\n            if (this.props.onDragEnd && !this.cutting.enabled) {\n                this.props.onDragEnd();\n            }\n        });\n        map.addListener('dragstart', () => {\n            this.do_on_drag_start.forEach((cb) => {\n                if (!this.cutting.enabled) {\n                    cb();\n                }\n            });\n            if (this.props.onDragStart && !this.cutting.enabled) {\n                this.props.onDragStart();\n            }\n        });\n        map.addListener('heading_changed', () => {\n            if (this.props.onHeadingChanged) {\n                this.props.onHeadingChanged();\n            }\n        });\n        map.addListener('idle', () => {\n            this.do_on_drag_end.forEach((cb) => {\n                if (!this.cutting.enabled) {\n                    cb();\n                }\n            });\n            if (this.props.onIdle && !this.cutting.enabled) {\n                this.props.onIdle();\n            }\n        });\n        map.addListener('maptypeid_changed', () => {\n            if (this.props.onMapTypeIdChanged) {\n                this.props.onMapTypeIdChanged();\n            }\n        });\n        map.addListener('mousemove', (mouse_event: MouseEvent) => {\n            if (this.cutting.enabled) {\n                this.cuttingPositionUpdate(mouse_event);\n            }\n            if (this.props.onMouseMove) {\n                this.props.onMouseMove(mouse_event);\n            }\n        });\n        map.addListener('mouseout', (mouse_event: MouseEvent) => {\n            if (this.props.onMouseOut) {\n                this.props.onMouseOut(mouse_event);\n            }\n        });\n        map.addListener('mouseover', (mouse_event: MouseEvent) => {\n            if (this.props.onMouseOver) {\n                this.props.onMouseOver(mouse_event);\n            }\n        });\n        map.addListener('projection_changed', () => {\n            if (this.props.onProjectionChanged) {\n                this.props.onProjectionChanged();\n            }\n        });\n        map.addListener('reize', () => {\n            if (this.props.onResize) {\n                this.props.onResize();\n            }\n        });\n        map.addListener('rightclick', (mouse_event: MouseEvent) => {\n            if (this.props.onRightClick && !this.cutting.enabled) {\n                this.props.onRightClick(mouse_event);\n            }\n        });\n        map.addListener('tilesloaded', () => {\n            if (this.props.onTilesLoaded) {\n                this.props.onTilesLoaded();\n            }\n        });\n        map.addListener('tilt_changed', () => {\n            if (this.props.onTiltChanged) {\n                this.props.onTiltChanged();\n            }\n        });\n        map.addListener('zoom_changed', () => {\n            if (this.props.onZoomChanged) {\n                this.props.onZoomChanged();\n            }\n        });\n    }\n\n\n\n\n    setDrawingMode(type: \"polyline\" | \"polygon\", opts: PolylineOptions | PolygonOptions, cb: (path: [number, number][] | [number, number] | null, overlay: Polygon|Polyline|Marker) => void) {\n        let mode = null;\n        if (!this.services.drawing) {\n            console.error(\"MAP: Drawing library not available! Add it to google maps api request url.\");\n            return;\n        }\n        if (this.services.drawing.OverlayType.hasOwnProperty(type.toUpperCase())) {\n            mode = this.services.drawing.OverlayType[type.toUpperCase()];\n        } else {\n            throw new Error(\"MAP: Invalid drawing mode type:\" + type);\n        }\n        let drawing_opts = Object.assign({}, opts, { drawingMode: mode });\n        this.services.drawingManager.setOptions(drawing_opts);\n        console.log(\"MAP: Drawing mode started for:\", type + \".\");\n        this.cancel_drawing = false;\n\n        if (this.drawing_completed_listener) {\n            this.drawing_completed_listener.remove();\n        }\n        this.drawing_completed_listener = google.maps.event.addListenerOnce(\n            this.services.drawingManager,\n            'overlaycomplete',\n            (e: google.maps.drawing.OverlayCompleteEvent) => {\n                // console.log(\"overlay complete\", cb, this.cancel_drawing);\n                e.overlay.setMap(null);\n                drawing_opts.drawingMode = null;\n                this.services.drawingManager.setOptions(drawing_opts);\n                if (!cb || this.cancel_drawing) {\n                    return;\n                }\n                if (type === \"polyline\" || type === \"polygon\") {\n                    const overlay = e.overlay as Polygon | Polyline;\n                    let path = external_helpers.MVCArrayToCoordArray(overlay.getPath());\n                    if (cb) { cb(path as [number, number][], overlay); }\n                } else if (type === \"marker\") {\n                    const overlay = e.overlay as Marker;\n                    let pos = overlay.getPosition();\n                    cb([pos.lat(), pos.lng()], overlay);\n                } else {\n                    cb(null, e.overlay as any);\n                }\n                this.cancel_drawing = false;\n                this.drawing_completed_listener = null;\n            }\n        );\n    }\n    completeDrawingMode() {\n        if (this.services.drawing) {\n            this.services.drawingManager.setOptions({ drawingMode: null });\n        }\n        if (this.drawing_completed_listener) {\n            this.drawing_completed_listener.remove();\n            this.drawing_completed_listener = null;\n        }\n    }\n    cancelDrawingMode(debug_src?: string) {\n        if (debug_src) {\n            console.log(\"cancel drawing mode:\", debug_src);\n        }\n        if (this.services.drawing && this.drawing_completed_listener) {\n            this.cancel_drawing = true;\n            this.services.drawingManager.setOptions({ drawingMode: null });\n        }\n    }\n\n\n\n\n\n    setCuttingMode(polyline_id: string, cb = null) {\n        if (this.map_objects.polyline.hasOwnProperty(polyline_id) === false) {\n            console.error(\"MAP: Cannot set cutting mode, provided object id not on map: \", polyline_id);\n            return;\n        }\n        if (!cb) {\n            console.error(\"MAP: Cannot setCuttingMode without supplying completed callback.\");\n            return;\n        }\n        this.cancelDrawingMode(\"setCuttingMode\");\n        let polyline = this.map_objects.polyline[polyline_id];\n        let opts = {\n            clickable: false,\n            editable: false\n        };\n        polyline.gmaps_obj.setOptions(opts);\n\n        const path = polyline.options.path;\n        this.cutting = {\n            enabled: true,\n            id: polyline_id,\n            indexes: [],\n            arr: path as any\n        };\n        if (!this.cutting_objects.hasOwnProperty(\"hover_scissors\")) {\n            let opts = {\n                position: this.props.default_center,\n                icon: {\n                    url: ScissorHoverIcon\n                },\n                zIndex: Z_INDEX_SCISSORS_HOVER,\n                visible: false,\n                clickable: false,\n                editable: false,\n                draggable: false\n            };\n            let hover_scissors = {\n                gmaps_obj: new window.google.maps.Marker(opts),\n                options: opts\n            };\n            hover_scissors.gmaps_obj.setMap(this.map);\n            this.cutting_objects.hover_scissors = hover_scissors;\n        }\n        console.log(\"MAP: Cutting mode started for id: \" + polyline_id);\n        this.cutting_completed_listener = (value) => {\n            if (cb) {\n                (cb as any)(value);\n            } else {\n                throw new Error(\"Callback for cutting completed not defined.\");\n            }\n        };\n    }\n    cuttingPositionUpdate(mouse_event: MouseEvent) {\n        if (!this.cutting.enabled || !this.cutting.id) {\n            //If we are not in cutting mode ignore this function call.\n            return;\n        }\n        let polyline = this.map_objects.polyline[this.cutting.id];\n        let mouse_coord = { lat: mouse_event.latLng.lat(), lng: mouse_event.latLng.lng() };\n        let closest_index = 0;\n        let closest_dist = 9999999;\n        //Find nearest index and move scissors_hover marker.\n        polyline.options.path!.forEach((point: any, i: number) => {\n            let dist = external_helpers.haversineDistance(mouse_coord, point);\n            if (dist < closest_dist) {\n                closest_index = i;\n                closest_dist = dist;\n            }\n        });\n        let path = polyline.options.path as any;\n        if (closest_dist < CUTTING_SNAP_DISTANCE && closest_index > 0 && closest_index < path.length - 1) {\n            this.cutting_objects.hover_scissors.gmaps_obj.setOptions({\n                position: path[closest_index],\n                visible: true\n            });\n        } else {\n            this.cutting_objects.hover_scissors.gmaps_obj.setOptions({\n                visible: false\n            });\n        }\n    }\n    cuttingClick(mouse_event: google.maps.MouseEvent) {\n        if (!this.cutting.id) {\n            console.error(\"No cutting.id set when clicking for cut.\");\n            return;\n        }\n        if (!this.cutting.indexes) {\n            console.error(\"cutting.indexes not defined when clicking for cut.\");\n            return;\n        }\n        let polyline = this.map_objects.polyline[this.cutting.id];\n        let path = polyline.options.path as any;\n        let mouse_coord = { lat: mouse_event.latLng.lat(), lng: mouse_event.latLng.lng() };\n        let closest_index = 0;\n        let closest_dist = 9999999;\n        path.forEach((point: any, i: number) => {\n            let dist = external_helpers.haversineDistance(mouse_coord, point);\n            if (dist < closest_dist) {\n                closest_index = i;\n                closest_dist = dist;\n            }\n        });\n        if (closest_dist > CUTTING_SNAP_DISTANCE) {\n            //Pointer is too far away from any point, ignore.\n            return;\n        }\n        if (closest_index === 0 || closest_index === path.length - 1) {\n            //We are never interested in first or last point.\n            return;\n        }\n        let already_selected_position = this.cutting.indexes.findIndex(value => closest_index === value);\n        if (already_selected_position > -1) {\n            //This index has already been selected for cutting, remove it.\n            this.cutting.indexes.splice(already_selected_position, 1);\n            if (this.cutting_objects.hasOwnProperty(\"index_\" + closest_index)) {\n                //We have drawn a marker for this cut, remove it.\n                this.cutting_objects[\"index_\" + closest_index].gmaps_obj.setMap(null);\n                delete this.cutting_objects[\"index_\" + closest_index];\n            }\n        } else {\n            this.cutting.indexes.push(closest_index);\n            let opts = {\n                position: path[closest_index],\n                icon: {\n                    url: ScissorIcon\n                },\n                zIndex: Z_INDEX_SCISSORS,\n                visible: true,\n                clickable: false,\n                editable: false,\n                draggable: false\n            };\n            let cut_marker = {\n                gmaps_obj: new window.google.maps.Marker(opts),\n                options: opts\n            };\n            cut_marker.gmaps_obj.setMap(this.map);\n            this.cutting_objects[\"index_\" + closest_index] = cut_marker;\n        }\n    }\n    completeCuttingMode() {\n        if (!this.cutting || this.cutting.id === null) { return; }\n        let indexes = this.cutting.indexes;\n        let polyline = this.map_objects.polyline[this.cutting.id];\n        if (!polyline) { return; }\n        this.cutting = {\n            enabled: false,\n            id: null,\n            indexes: null\n        };\n        Object.keys(this.cutting_objects).forEach((marker_id) => {\n            //Remove all cutting related markers.\n            this.cutting_objects[marker_id].gmaps_obj.setMap(null);\n            delete this.cutting_objects[marker_id];\n        });\n\n\n        let opts = {\n            clickable: true,\n            editable: true\n        };\n        polyline.gmaps_obj.setOptions(opts);\n        if (!indexes || indexes.length === 0) {\n            //We made no selections, just return.\n            if (this.cutting_completed_listener) {\n                this.cutting_completed_listener(null);\n            }\n            return;\n        }\n\n        let path = polyline.options.path as unknown as [number, number][];\n        indexes.sort();\n        //Add last index so that the remaining points form a segment as well.\n        indexes.push(path.length - 1);\n        let resulting_segments: ([number, number][])[] = [];\n        let prev_index = 0;\n        indexes.forEach((index) => {\n            let segment = path.slice(prev_index, index);\n            //Copy last point as well.\n            segment.push(path[index]);\n            resulting_segments.push(segment);\n            prev_index = index;\n        });\n        if (this.cutting_completed_listener) {\n            this.cutting_completed_listener(resulting_segments);\n        }\n    }\n    cancelCuttingMode() {\n        this.cutting = {\n            enabled: false,\n            id: null,\n            indexes: null\n        };\n        Object.keys(this.cutting_objects).forEach((marker_id) => {\n            //Remove all cutting related markers.\n            this.cutting_objects[marker_id].gmaps_obj.setMap(null);\n            delete this.cutting_objects[marker_id];\n        });\n        if (!this.cutting.id) {\n            console.error(\"No cutting.id set when cancelling cutting mode.\");\n            return;\n        }\n        let polyline = this.map_objects.polyline[this.cutting.id];\n        if (polyline) {\n            let opts = {\n                clickable: true,\n                editable: true\n            };\n            polyline.gmaps_obj.setOptions(opts);\n        }\n    }\n\n\n    render() {\n        return (\n            <div style={{ height: \"100%\" }}>\n                <div ref=\"map\" style={{ position:\"absolute\", top: '0', left: '0', right: '0', bottom: '0' }} />\n            </div>\n        );\n    }\n}\n\n\n\n"]}