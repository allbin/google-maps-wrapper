{"version":3,"sources":["../src/module/feature_helpers.ts"],"names":[],"mappings":"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","file":"feature_helpers.js","sourcesContent":["import WrappedMapBase, { GeoJSONFeatureCollection, FeatureOptionsSet, WrappedFeature, GeoJSONFeature, FeatureEvents } from '.';\n\nconst feature_events: FeatureEvents[] = [\"click\" , \"mouseover\" , \"mouseout\" , \"mousedown\" , \"mouseup\" , \"rightclick\"];\n\ntype setupLayerEvents = (\n    map_ref: WrappedMapBase,\n    layer: google.maps.Data\n) => void;\nexport const setupLayerEvents: setupLayerEvents = (map_ref, layer) => {\n    feature_events.forEach((event_type) => {\n        layer.addListener(event_type, (data_mouse_event: google.maps.Data.MouseEvent) => {\n            const feature_id = data_mouse_event.feature.getId();\n            const wrapped_feature = map_ref.map_objects.features[feature_id];\n            if (wrapped_feature && wrapped_feature._cbs[event_type]) {\n                wrapped_feature._cbs[event_type](data_mouse_event);\n            }\n        });\n    });\n};\n\n\ntype wrapGmapsFeature = (\n    layer: google.maps.Data,\n    gmaps_feature: google.maps.Data.Feature,\n    options: FeatureOptionsSet\n) => WrappedFeature;\nconst wrapGmapsFeature: wrapGmapsFeature = (layer, gmaps_feature, options) => {\n    interface WrappedFeatureShell extends Partial<WrappedFeature> {\n        gmaps_feature: any;\n        options: FeatureOptionsSet;\n        selected_options_id: string;\n        _visible: boolean;\n        _cbs: { [key: string]: (e: google.maps.Data.MouseEvent) => void };\n    }\n\n    let wrapped_feature: WrappedFeatureShell = {\n        gmaps_feature: gmaps_feature,\n        options: options,\n        selected_options_id: 'default',\n        _visible: options.default.visible !== undefined ? options.default.visible : true,\n        _cbs: {}\n    };\n    wrapped_feature.setOptions = (new_options: FeatureOptionsSet) => {\n        wrapped_feature.options = new_options;\n        return Promise.resolve(wrapped_feature as WrappedFeature);\n    };\n    wrapped_feature.applyOptions = (options_id: string) => {\n        let new_options = Object.assign({}, options.default, options[wrapped_feature.selected_options_id], { visible: wrapped_feature._visible });\n        layer.overrideStyle(gmaps_feature, new_options);\n    };\n    wrapped_feature.show = () => {\n        if (!wrapped_feature._visible && wrapped_feature.applyOptions) {\n            wrapped_feature._visible = true;\n            wrapped_feature.applyOptions(wrapped_feature.selected_options_id);\n        }\n    };\n    wrapped_feature.hide = () => {\n        if (wrapped_feature._visible && wrapped_feature.applyOptions) {\n            wrapped_feature._visible = false;\n            wrapped_feature.applyOptions(wrapped_feature.selected_options_id);\n        }\n    };\n    wrapped_feature.remove = () => {\n        layer.remove(gmaps_feature);\n    };\n    wrapped_feature.registerEventCB = (event_type, cb) => {\n        wrapped_feature._cbs[event_type] = cb;\n    };\n    wrapped_feature.unregisterEventCB = (event_type) => {\n        delete wrapped_feature._cbs[event_type];\n    };\n\n\n    wrapped_feature.applyOptions('default');\n\n    return wrapped_feature as unknown as WrappedFeature;\n};\n\n\ntype setGeoJSONFeature = (\n    map_ref: WrappedMapBase,\n    feature: GeoJSONFeature,\n    options: FeatureOptionsSet,\n    layer?: google.maps.Data | null\n) => Promise<WrappedFeature>;\nexport const setGeoJSONFeature: setGeoJSONFeature = (map_ref, feature, options, layer = null) => {\n    return new Promise((resolve, reject) => {\n        if (!map_ref.initialized) {\n            map_ref.do_after_init.push(() => {\n                setGeoJSONFeature(map_ref, feature, options, layer).then((res) => {\n                    resolve(res);\n                }).catch((err) => {\n                    reject(err);\n                });\n            });\n            return;\n        }\n\n        if (map_ref.map_objects.features.hasOwnProperty(feature.id)) {\n            let wrapped_feature = map_ref.map_objects.features[feature.id];\n            wrapped_feature.remove();\n        }\n\n        if (!layer) {\n            if (!map_ref.features_layer) {\n                reject(\"Internal error in map wrapper: Features layer not created.\");\n            }\n            layer = map_ref.features_layer!;\n        }\n        const gmaps_feature = layer.addGeoJson(feature)[0];\n        const wrapped_feature = wrapGmapsFeature(layer, gmaps_feature, options);\n        map_ref.map_objects.features[feature.id] = wrapped_feature;\n        resolve(wrapped_feature);\n    });\n};\n\ntype setGeoJSONCollection = (\n    map_ref: WrappedMapBase,\n    collection: GeoJSONFeatureCollection,\n    options: FeatureOptionsSet\n) => Promise<{\n    layer: google.maps.Data,\n    features: WrappedFeature[]\n}>;\nexport const setGeoJSONCollection: setGeoJSONCollection = (map_ref, collection, options) => {\n    return new Promise((resolve, reject) => {\n        if (!map_ref.initialized) {\n            map_ref.do_after_init.push(() => {\n                setGeoJSONCollection(map_ref, collection, options).then((res) => {\n                    resolve(res);\n                }).catch((err) => {\n                    reject(err);\n                });\n            });\n            return;\n        }\n\n        let layer = new window.google.maps.Data() as google.maps.Data;\n        layer.setMap(map_ref.map);\n        setupLayerEvents(map_ref, layer);\n\n        let features: WrappedFeature[] = layer.addGeoJson(collection).map((gmaps_feature) => {\n            let wrapped_feature = wrapGmapsFeature(layer, gmaps_feature, options);\n            map_ref.map_objects.features[gmaps_feature.getId()] = wrapped_feature;\n            return wrapped_feature;\n        });\n\n        layer.setStyle(options.default);\n        resolve({\n            layer: layer,\n            features: features\n        });\n    });\n};\n"]}