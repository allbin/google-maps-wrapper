{"version":3,"sources":["../src/module/internal_helpers.ts"],"names":[],"mappings":"AAAA,iCAAiC;AACjC,+BAA+B;AAC/B,wDAAwD;AACxD,wBAAwB;AAoBxB,MAAM,wBAAwB,GAAG;IAC/B,OAAO,EAAE,IAAI;CACd,CAAC;AACF,MAAM,uBAAuB,GAAG;IAC9B,OAAO,EAAE,IAAI;CACd,CAAC;AACF,MAAM,sBAAsB,GAAG;IAC7B,OAAO,EAAE,IAAI;CACd,CAAC;AAEF,MAAM,CAAC,MAAM,iBAAiB,GAAG,CAC/B,GAAoB,EACpB,MAAkB,EACb,EAAE;IACP,IAAI,CAAC,GAAG,EAAE;QACR,MAAM,IAAI,KAAK,CAAC,wDAAwD,CAAC,CAAC;KAC3E;IACD,MAAM,MAAM,GAAG,GAAG,CAAC,SAAS,EAAE,CAAC;IAC/B,IAAI,CAAC,MAAM,EAAE;QACX,MAAM,IAAI,KAAK,CAAC,gDAAgD,CAAC,CAAC;KACnE;IACD,MAAM,QAAQ,GAAG,GAAG,CAAC,aAAa,EAAE,CAAC,iBAAiB,CAAC,MAAM,CAAC,YAAY,EAAE,CAAC,CAAC;IAC9E,MAAM,UAAU,GAAG,GAAG;SACnB,aAAa,EAAE;SACf,iBAAiB,CAAC,MAAM,CAAC,YAAY,EAAE,CAAC,CAAC;IAC5C,MAAM,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,GAAG,CAAC,OAAO,EAAE,CAAC,CAAC;IACzC,MAAM,UAAU,GAAG,GAAG,CAAC,aAAa,EAAE,CAAC,iBAAiB,CAAC,MAAM,CAAC,CAAC;IACjE,OAAO,IAAI,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CACjC,CAAC,UAAU,CAAC,CAAC,GAAG,UAAU,CAAC,CAAC,CAAC,GAAG,KAAK,EACrC,CAAC,UAAU,CAAC,CAAC,GAAG,QAAQ,CAAC,CAAC,CAAC,GAAG,KAAK,CACpC,CAAC;AACJ,CAAC,CAAC;AAEF,MAAM,CAAC,MAAM,kBAAkB,GAAG,CAChC,GAAoB,EACpB,aAAiC,EAClB,EAAE,CACjB,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,MAAM,EAAE,EAAE;IAC9B,IAAI,KAAK,CAAC,OAAO,CAAC,aAAa,CAAC,KAAK,KAAK,EAAE;QAC1C,MAAM,CAAC,wBAAwB,CAAC,CAAC;KAClC;SAAM,IAAI,aAAa,CAAC,MAAM,GAAG,CAAC,EAAE;QACnC,MAAM,CAAC,+CAA+C,CAAC,CAAC;KACzD;IACD,MAAM,eAAe,GAAG;QACtB,IAAI,EAAE,MAAM,CAAC,gBAAgB;QAC7B,IAAI,EAAE,MAAM,CAAC,gBAAgB;QAC7B,KAAK,EAAE,MAAM,CAAC,gBAAgB;QAC9B,KAAK,EAAE,MAAM,CAAC,gBAAgB;KAC/B,CAAC;IAEF,aAAa,CAAC,OAAO,CAAC,CAAC,KAAK,EAAE,EAAE;QAC9B,eAAe,CAAC,IAAI;YAClB,KAAK,CAAC,CAAC,CAAC,GAAG,eAAe,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,eAAe,CAAC,IAAI,CAAC;QACpE,eAAe,CAAC,IAAI;YAClB,KAAK,CAAC,CAAC,CAAC,GAAG,eAAe,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,eAAe,CAAC,IAAI,CAAC;QACpE,eAAe,CAAC,KAAK;YACnB,KAAK,CAAC,CAAC,CAAC,GAAG,eAAe,CAAC,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,eAAe,CAAC,KAAK,CAAC;QACtE,eAAe,CAAC,KAAK;YACnB,KAAK,CAAC,CAAC,CAAC,GAAG,eAAe,CAAC,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,eAAe,CAAC,KAAK,CAAC;IACxE,CAAC,CAAC,CAAC;IAEH,IAAI,GAAG,EAAE;QACP,GAAG,CAAC,SAAS,CAAC,eAAe,CAAC,CAAC;KAChC;IACD,OAAO,EAAE,CAAC;AACZ,CAAC,CAAC,CAAC;AACL,MAAM,CAAC,MAAM,kBAAkB,GAAG,CAChC,MAA+B,EAC/B,GAAqB,EACN,EAAE,CACjB,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,EAAE;IACtB,IAAI,GAAG,EAAE;QACP,GAAG,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;KACvB;IACD,OAAO,EAAE,CAAC;AACZ,CAAC,CAAC,CAAC;AACL,MAAM,CAAC,MAAM,wBAAwB,GAAG,CACtC,oBAAyC,EACzC,GAAqB,EACN,EAAE,CACjB,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,MAAM,EAAE,EAAE;IAC9B,IAAI,KAAK,CAAC,OAAO,CAAC,oBAAoB,CAAC,KAAK,KAAK,EAAE;QACjD,MAAM,CAAC,wBAAwB,CAAC,CAAC;KAClC;SAAM,IAAI,oBAAoB,CAAC,MAAM,GAAG,CAAC,EAAE;QAC1C,MAAM,CAAC,8CAA8C,CAAC,CAAC;KACxD;IACD,MAAM,eAAe,GAAG;QACtB,IAAI,EAAE,CAAC,QAAQ;QACf,IAAI,EAAE,QAAQ;QACd,KAAK,EAAE,QAAQ;QACf,KAAK,EAAE,CAAC,QAAQ;KACjB,CAAC;IAEF,oBAAoB,CAAC,OAAO,CAAC,CAAC,KAAK,EAAE,EAAE;QACrC,eAAe,CAAC,IAAI;YAClB,KAAK,CAAC,GAAG,GAAG,eAAe,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,eAAe,CAAC,IAAI,CAAC;QACtE,eAAe,CAAC,IAAI;YAClB,KAAK,CAAC,GAAG,GAAG,eAAe,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,eAAe,CAAC,IAAI,CAAC;QACtE,eAAe,CAAC,KAAK;YACnB,KAAK,CAAC,GAAG,GAAG,eAAe,CAAC,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,eAAe,CAAC,KAAK,CAAC;QACxE,eAAe,CAAC,KAAK;YACnB,KAAK,CAAC,GAAG,GAAG,eAAe,CAAC,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,eAAe,CAAC,KAAK,CAAC;IAC1E,CAAC,CAAC,CAAC;IAEH,IAAI,GAAG,EAAE;QACP,GAAG,CAAC,SAAS,CAAC,eAAe,CAAC,CAAC;KAChC;IACD,OAAO,EAAE,CAAC;AACZ,CAAC,CAAC,CAAC;AAEL,MAAM,CAAC,MAAM,WAAW,GAAG,CACzB,GAAoB,EACpB,WAAuB,EACvB,OAAqB,EACrB,EAAmB,EACnB,OAA+B,EACD,EAAE,CAChC,YAAY,CAAC,GAAG,EAAE,WAAW,EAAE,OAAO,EAAE,UAAU,EAAE,EAAE,EAAE,OAAO,CAE9D,CAAC;AACJ,MAAM,CAAC,MAAM,UAAU,GAAG,CACxB,GAAoB,EACpB,WAAuB,EACvB,OAAqB,EACrB,EAAmB,EACnB,OAA8B,EACD,EAAE,CAC/B,YAAY,CAAC,GAAG,EAAE,WAAW,EAAE,OAAO,EAAE,SAAS,EAAE,EAAE,EAAE,OAAO,CAE7D,CAAC;AACJ,MAAM,CAAC,MAAM,SAAS,GAAG,CACvB,GAAoB,EACpB,WAAuB,EACvB,OAAqB,EACrB,EAAmB,EACnB,OAA6B,EACD,EAAE,CAC9B,YAAY,CAAC,GAAG,EAAE,WAAW,EAAE,OAAO,EAAE,QAAQ,EAAE,EAAE,EAAE,OAAO,CAE5D,CAAC;AAYJ,MAAM,CAAC,MAAM,YAAY,GAAiB,CACxC,GAAG,EACH,WAAW,EACX,OAAO,EACP,IAAI,EACJ,EAAE,EACF,OAAO,EACP,mBAAmB,GAAG,SAAS,EAC/B,EAAE,CACF,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,MAAM,EAAE,EAAE;IAC9B,IAAI,MAAM,CAAC,SAAS,CAAC,cAAc,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,EAAE,EAAE,CAAC,EAAE;QAC/D,iCAAiC;QACjC,MAAM,OAAO,GAAG,WAAW,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC;QACtC,MAAM,OAAO,GAAG,OAAO,CAAC,SAAS,CAAC,UAAU,EAAE,CAAC;QAC/C,MAAM,IAAI,GAAG,MAAM,CAAC,MAAM,CACxB,EAAE,EACF,OAAO,CAAC,OAAO,CAAC,mBAAmB,CAAC,EACpC,OAAO,CAAC,mBAAmB,CAAC,EAC5B,EAAE,OAAO,EAAE,OAAO,EAAE,CACrB,CAAC;QACF,OAAO,CAAC,mBAAmB,GAAG,mBAAmB,CAAC;QAClD,QAAQ,OAAO,CAAC,IAAI,EAAE;YACpB,KAAK,UAAU,CAAC,CAAC;gBACf,OAAO,CAAC,SAAS,CAAC,UAAU,CAAC,IAA2B,CAAC,CAAC;gBAC1D,OAAO,CAAC,OAAO,GAAG,OAAiC,CAAC;gBACpD,MAAM;aACP;YACD,KAAK,SAAS,CAAC,CAAC;gBACd,OAAO,CAAC,SAAS,CAAC,UAAU,CAAC,IAA0B,CAAC,CAAC;gBACzD,OAAO,CAAC,OAAO,GAAG,OAAgC,CAAC;gBACnD,MAAM;aACP;YACD,KAAK,QAAQ,CAAC,CAAC;gBACb,OAAO,CAAC,SAAS,CAAC,UAAU,CAAC,IAAyB,CAAC,CAAC;gBACxD,OAAO,CAAC,OAAO,GAAG,OAA+B,CAAC;gBAClD,MAAM;aACP;YACD,OAAO,CAAC,CAAC;gBACP,MAAM,CAAC,IAAI,KAAK,CAAC,0BAA0B,CAAC,CAAC,CAAC;aAC/C;SACF;QACD,OAAO,CAAC,OAAO,CAAC,CAAC;QACjB,OAAO;KACR;IAYD,MAAM,aAAa,GAAgB;QACjC,IAAI,EAAE,EAAE;QACR,IAAI,EAAE,IAAI;QACV,mBAAmB,EAAE,mBAAmB;KACzC,CAAC;IACF,IAAI,MAAM,GAAsB,EAAE,CAAC;IACnC,IAAI,WAAW,GAAsB,EAAE,CAAC;IACxC,QAAQ,IAAI,EAAE;QACZ,KAAK,QAAQ,CAAC,CAAC;YACb,MAAM,IAAI,GAAG,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,sBAAsB,EAAE,OAAO,CAAC,OAAO,CAAC,CAAC;YACxE,aAAa,CAAC,SAAS,GAAG,IAAI,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;YAC9D,aAAa,CAAC,OAAO,GAAG,OAAO,CAAC;YAChC,MAAM,GAAG;gBACP,OAAO;gBACP,WAAW;gBACX,UAAU;gBACV,WAAW;gBACX,SAAS;gBACT,WAAW;gBACX,MAAM;gBACN,SAAS;gBACT,UAAU;gBACV,YAAY;aACb,CAAC;YACF,MAAM;SACP;QACD,KAAK,SAAS,CAAC,CAAC;YACd,MAAM,IAAI,GAAG,MAAM,CAAC,MAAM,CACxB,EAAE,EACF,uBAAuB,EACvB,OAAO,CAAC,OAAO,CAChB,CAAC;YACF,aAAa,CAAC,SAAS,GAAG,IAAI,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;YAC/D,aAAa,CAAC,OAAO,GAAG,OAAO,CAAC;YAChC,MAAM,GAAG;gBACP,OAAO;gBACP,UAAU;gBACV,WAAW;gBACX,MAAM;gBACN,SAAS;gBACT,WAAW;gBACX,UAAU;gBACV,WAAW;gBACX,SAAS;gBACT,WAAW;gBACX,YAAY;aACb,CAAC;YACF,WAAW,GAAG,CAAC,QAAQ,EAAE,WAAW,EAAE,WAAW,CAAC,CAAC;YACnD,MAAM;SACP;QACD,KAAK,UAAU,CAAC,CAAC;YACf,MAAM,IAAI,GAAG,MAAM,CAAC,MAAM,CACxB,EAAE,EACF,wBAAwB,EACxB,OAAO,CAAC,OAAO,CAChB,CAAC;YACF,aAAa,CAAC,SAAS,GAAG,IAAI,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;YAChE,aAAa,CAAC,OAAO,GAAG,OAAO,CAAC;YAChC,MAAM,GAAG;gBACP,OAAO;gBACP,UAAU;gBACV,WAAW;gBACX,MAAM;gBACN,SAAS;gBACT,WAAW;gBACX,UAAU;gBACV,WAAW;gBACX,SAAS;gBACT,WAAW;gBACX,YAAY;aACb,CAAC;YACF,WAAW,GAAG,CAAC,QAAQ,EAAE,WAAW,EAAE,WAAW,CAAC,CAAC;YACnD,MAAM;SACP;QACD,OAAO,CAAC,CAAC;YACP,MAAM,CAAC,IAAI,KAAK,CAAC,0BAA0B,CAAC,CAAC,CAAC;YAC9C,OAAO;SACR;KACF;IAED,aAAa,CAAC,eAAe,GAAG,CAAC,UAAkB,EAAE,EAAE,EAAE,EAAE;QACzD,aAAa,CAAC,IAAI,CAAC,UAAU,CAAC,GAAG,EAAE,CAAC;IACtC,CAAC,CAAC;IACF,aAAa,CAAC,iBAAiB,GAAG,CAAC,UAAU,EAAE,EAAE;QAC/C,IACE,MAAM,CAAC,SAAS,CAAC,cAAc,CAAC,IAAI,CAAC,aAAa,CAAC,IAAI,EAAE,UAAU,CAAC,EACpE;YACA,OAAO,aAAa,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;SACvC;IACH,CAAC,CAAC;IAEF,aAAa,CAAC,MAAM,GAAG,GAAG,EAAE;QAC1B,OAAO,cAAc,CAAC,WAAW,EAAE,OAAO,EAAE,IAAI,EAAE,EAAE,CAAC,CAAC;IACxD,CAAC,CAAC;IACF,aAAa,CAAC,UAAU,GAAG,CAAC,WAAW,EAAE,EAAE;QACzC,OAAO,YAAY,CACjB,GAAG,EACH,WAAW,EACX,OAAO,EACP,IAAI,EACJ,EAAE,EACF,WAAW,EACX,aAAa,CAAC,mBAAmB,CAClC,CAAC;IACJ,CAAC,CAAC;IACF,aAAa,CAAC,YAAY,GAAG,CAAC,UAAU,EAAE,EAAE;QAC1C,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,cAAc,CAAC,IAAI,CAAC,OAAO,EAAE,UAAU,CAAC,EAAE;YAC9D,MAAM,IAAI,KAAK,CACb,0CAA0C;gBACxC,UAAU;gBACV,8CAA8C,CACjD,CAAC;SACH;QACD,aAAa,CAAC,mBAAmB,GAAG,UAAU,CAAC;QAC/C,MAAM,OAAO,GAAI,aAAa,CAAC,SAAiC,CAAC,UAAU,EAAE,CAAC;QAC9E,MAAM,QAAQ,GAAG,aAAa,CAAC,OAAO,CAAC;QACvC,aAAa,CAAC,SAAS,CAAC,UAAU,CAChC,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,QAAQ,CAAC,OAAO,EAAE,QAAQ,CAAC,UAAU,CAAC,EAAE;YACxD,OAAO,EAAE,OAAO;SACjB,CAAC,CACH,CAAC;IACJ,CAAC,CAAC;IACF,aAAa,CAAC,IAAI,GAAG,GAAG,EAAE;QACxB,aAAa,CAAC,SAAS,CAAC,UAAU,CAChC,MAAM,CAAC,MAAM,CACX,EAAE,EACF,aAAa,CAAC,OAAO,CAAC,aAAa,CAAC,mBAAmB,CAAC,EACxD,EAAE,OAAO,EAAE,KAAK,EAAE,CACnB,CACF,CAAC;IACJ,CAAC,CAAC;IACF,aAAa,CAAC,IAAI,GAAG,GAAG,EAAE;QACxB,aAAa,CAAC,SAAS,CAAC,UAAU,CAChC,MAAM,CAAC,MAAM,CACX,EAAE,EACF,aAAa,CAAC,OAAO,CAAC,aAAa,CAAC,mBAAmB,CAAC,EACxD,EAAE,OAAO,EAAE,IAAI,EAAE,CAClB,CACF,CAAC;IACJ,CAAC,CAAC;IACF,MAAM,OAAO,GAAG,aAAmC,CAAC;IACpD,MAAM,CAAC,OAAO,CAAC,CAAC,UAAU,EAAE,EAAE;QAC5B,OAAO,CAAC,SAAS,CAAC,WAAW,CAAC,UAAU,EAAE,CAAC,CAAM,EAAE,EAAE;YACnD,OAAO,gBAAgB,CAAC,OAAO,EAAE,OAAO,EAAE,UAAU,EAAE,CAAC,CAAC,CAAC;QAC3D,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IACH,WAAW,CAAC,OAAO,CAAC,CAAC,UAAU,EAAE,EAAE;QACjC,OAAO,CAAC,SAAS,CAAC,OAAO,EAAE,CAAC,WAAW,CAAC,UAAU,EAAE,CAAC,CAAM,EAAE,EAAE;YAC7D,OAAO,gBAAgB,CAAC,OAAO,EAAE,OAAO,EAAE,UAAU,EAAE,CAAC,CAAC,CAAC;QAC3D,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,OAAO,CAAC,SAAS,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;IAE9B,QAAQ,OAAO,CAAC,IAAI,EAAE;QACpB,KAAK,UAAU,CAAC,CAAC;YACf,OAAO,CAAC,MAAM,GAAG,GAAG,EAAE;gBACpB,wBAAwB,CAAC,GAAG,EAAE,OAA8B,EAAE,IAAI,CAAC,CAAC;YACtE,CAAC,CAAC;YACF,OAAO,CAAC,KAAK,GAAG,GAAG,EAAE;gBACnB,wBAAwB,CAAC,GAAG,EAAE,OAA8B,EAAE,KAAK,CAAC,CAAC;YACvE,CAAC,CAAC;YACF,WAAW,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,GAAG,OAA8B,CAAC;YACvD,OAAO,CAAC,OAA8B,CAAC,CAAC;YACxC,MAAM;SACP;QACD,KAAK,SAAS,CAAC,CAAC;YACd,OAAO,CAAC,MAAM,GAAG,GAAG,EAAE;gBACpB,wBAAwB,CAAC,GAAG,EAAE,OAA6B,EAAE,IAAI,CAAC,CAAC;YACrE,CAAC,CAAC;YACF,OAAO,CAAC,KAAK,GAAG,GAAG,EAAE;gBACnB,wBAAwB,CAAC,GAAG,EAAE,OAA6B,EAAE,KAAK,CAAC,CAAC;YACtE,CAAC,CAAC;YACF,WAAW,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,GAAG,OAA6B,CAAC;YACtD,OAAO,CAAC,OAA6B,CAAC,CAAC;YACvC,MAAM;SACP;QACD,KAAK,QAAQ,CAAC,CAAC;YACb,OAAO,CAAC,MAAM,GAAG,GAAG,EAAE;gBACpB,wBAAwB,CAAC,GAAG,EAAE,OAA4B,EAAE,IAAI,CAAC,CAAC;YACpE,CAAC,CAAC;YACF,OAAO,CAAC,KAAK,GAAG,GAAG,EAAE;gBACnB,wBAAwB,CAAC,GAAG,EAAE,OAA4B,EAAE,KAAK,CAAC,CAAC;YACrE,CAAC,CAAC;YACF,WAAW,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,GAAG,OAA4B,CAAC;YACrD,OAAO,CAAC,OAA4B,CAAC,CAAC;YACtC,MAAM;SACP;QACD,OAAO,CAAC,CAAC;YACP,MAAM,CAAC,IAAI,KAAK,CAAC,0BAA0B,CAAC,CAAC,CAAC;SAC/C;KACF;IACD,OAAO;AACT,CAAC,CAAC,CAAC;AAEL,MAAM,CAAC,MAAM,cAAc,GAAG,CAC5B,WAAuB,EACvB,OAAqB,EACrB,IAAmB,EACnB,EAAmB,EACD,EAAE,CACpB,IAAI,OAAO,CAAU,CAAC,OAAO,EAAE,MAAM,EAAE,EAAE;IACvC,IAAI,MAAM,CAAC,SAAS,CAAC,cAAc,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,EAAE,EAAE,CAAC,EAAE;QAC/D,yBAAyB;QAEzB,IAAI,OAAO,CAAC,EAAE,IAAI,OAAO,CAAC,EAAE,KAAK,EAAE,EAAE;YACnC,2DAA2D;YAC3D,MAAM,CACJ,IAAI,KAAK,CACP,gEAAgE,CACjE,CACF,CAAC;YACF,OAAO;SACR;QAED,WAAW,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;QAC7C,OAAO,WAAW,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC;QAC7B,OAAO,CAAC,IAAI,CAAC,CAAC;QACd,OAAO;KACR;IACD,MAAM,CAAC,IAAI,KAAK,CAAC,gCAAgC,CAAC,CAAC,CAAC;AACtD,CAAC,CAAC,CAAC;AACL,MAAM,CAAC,MAAM,gBAAgB,GAAG,CAC9B,OAAqB,EACrB,OAA2B,EAC3B,UAA2B,EAC3B,CAAM,EACG,EAAE;IACX,IAAI,OAAO,CAAC,OAAO,EAAE;QACnB,wEAAwE;QACxE,OAAO,IAAI,CAAC;KACb;IAED,IACE,MAAM,CAAC,SAAS,CAAC,cAAc,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,UAAU,CAAC;QAC9D,OAAO,CAAC,IAAI,CAAC,UAAU,CAAC,EACxB;QACA,OAAO,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC;KAC7B;IACD,OAAO,IAAI,CAAC;AACd,CAAC,CAAC;AAEF,MAAM,CAAC,MAAM,wBAAwB,GAAG,CACtC,GAAoB,EACpB,GAIsB,EACtB,IAAI,GAAG,IAAI,EACL,EAAE;IACR,IAAI,CAAC,GAAG,EAAE;QACR,OAAO;KACR;IACD,IAAI,MAAM,CAAC,SAAS,CAAC,cAAc,CAAC,IAAI,CAAC,GAAG,EAAE,eAAe,CAAC,EAAE;QAC9D,IAAI,IAAI,EAAE;YACR,GAAG,CAAC,SAAS,CAAE,GAA0B,CAAC,KAAK,CAAC,CAAC;SAClD;aAAM;YACL,GAAG,CAAC,WAAW,CAAE,GAA0B,CAAC,KAAK,CAAC,CAAC;SACpD;QACD,OAAO;KACR;IAED,GAAG,GAAG,GAAmE,CAAC,CAAC,eAAe;IAC1F,QAAQ,GAAG,CAAC,IAAI,EAAE;QAChB,KAAK,QAAQ,CAAC,CAAC;YACb,MAAM,QAAQ,GAAG,GAAG,CAAC,SAAS,CAAC,WAAW,EAAE,CAAC;YAC7C,GAAG,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC;YACxB,IAAI,IAAI,EAAE;gBACR,GAAG,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC;aACjB;YACD,MAAM;SACP;QACD,KAAK,UAAU,CAAC,CAAC;YACf,MAAM,MAAM,GAAG;gBACb,KAAK,EAAE,CAAC,QAAQ;gBAChB,KAAK,EAAE,QAAQ;gBACf,IAAI,EAAE,QAAQ;gBACd,IAAI,EAAE,CAAC,QAAQ;aAChB,CAAC;YACF,GAAG,CAAC,SAAS,CAAC,OAAO,EAAE,CAAC,OAAO,CAAC,CAAC,KAAK,EAAE,EAAE;gBACxC,MAAM,CAAC,KAAK,GAAG,KAAK,CAAC,GAAG,EAAE,GAAG,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC;gBACvE,MAAM,CAAC,KAAK,GAAG,KAAK,CAAC,GAAG,EAAE,GAAG,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC;gBACvE,MAAM,CAAC,IAAI,GAAG,KAAK,CAAC,GAAG,EAAE,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC;gBACpE,MAAM,CAAC,IAAI,GAAG,KAAK,CAAC,GAAG,EAAE,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC;YACtE,CAAC,CAAC,CAAC;YACH,IAAI,IAAI,EAAE;gBACR,GAAG,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;aACvB;iBAAM;gBACL,GAAG,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;aACzB;YACD,MAAM;SACP;QACD,KAAK,SAAS,CAAC,CAAC;YACd,MAAM,MAAM,GAAG;gBACb,KAAK,EAAE,CAAC,QAAQ;gBAChB,KAAK,EAAE,QAAQ;gBACf,IAAI,EAAE,QAAQ;gBACd,IAAI,EAAE,CAAC,QAAQ;aAChB,CAAC;YACF,GAAG,CAAC,SAAS,CAAC,QAAQ,EAAE,CAAC,OAAO,CAAC,CAAC,IAAI,EAAE,EAAE;gBACxC,IAAI,CAAC,OAAO,CAAC,CAAC,KAAK,EAAE,EAAE;oBACrB,MAAM,CAAC,KAAK;wBACV,KAAK,CAAC,GAAG,EAAE,GAAG,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC;oBAC1D,MAAM,CAAC,KAAK;wBACV,KAAK,CAAC,GAAG,EAAE,GAAG,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC;oBAC1D,MAAM,CAAC,IAAI,GAAG,KAAK,CAAC,GAAG,EAAE,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC;oBACpE,MAAM,CAAC,IAAI,GAAG,KAAK,CAAC,GAAG,EAAE,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC;gBACtE,CAAC,CAAC,CAAC;YACL,CAAC,CAAC,CAAC;YACH,IAAI,IAAI,EAAE;gBACR,GAAG,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;aACvB;iBAAM;gBACL,GAAG,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;aACzB;YACD,MAAM;SACP;KACF;AACH,CAAC,CAAC","file":"internal_helpers.js","sourcesContent":["/////////////////////////////////\n//INTERNAL MAP HELPER FUNCTIONS\n//These functions are not exported to enduser, only used\n//internally by the map.\n\nimport {\n  GMW_LatLng,\n  GMW_LatLngBoundsLiteral,\n  GMW_LatLngLiteral,\n  GMW_PolylineOptionsSet,\n  GMW_PolygonOptionsSet,\n  GMW_MarkerOptionsSet,\n  GMW_PolylineOptions,\n  GMW_PolygonOptions,\n  GMW_MarkerOptions,\n  GMW_WrappedPolyline,\n  GMW_WrappedPolygon,\n  GMW_WrappedMarker,\n  GMW_WrappedFeature,\n  MapObjectType,\n  GMW_WrappedGmapObj,\n} from \".\";\n\nconst DEFAULT_POLYLINE_OPTIONS = {\n  visible: true,\n};\nconst DEFAULT_POLYGON_OPTIONS = {\n  visible: true,\n};\nconst DEFAULT_MARKER_OPTIONS = {\n  visible: true,\n};\n\nexport const fromLatLngToPixel = (\n  map: google.maps.Map,\n  latLng: GMW_LatLng\n): any => {\n  if (!map) {\n    throw new Error(\"Cannot call fromLatLngToPixel before init is finished.\");\n  }\n  const bounds = map.getBounds();\n  if (!bounds) {\n    throw new Error(\"Map not mounted when calling fromLatLngToPixel\");\n  }\n  const topRight = map.getProjection().fromLatLngToPoint(bounds.getNorthEast());\n  const bottomLeft = map\n    .getProjection()\n    .fromLatLngToPoint(bounds.getSouthWest());\n  const scale = Math.pow(2, map.getZoom());\n  const worldPoint = map.getProjection().fromLatLngToPoint(latLng);\n  return new window.google.maps.Point(\n    (worldPoint.x - bottomLeft.x) * scale,\n    (worldPoint.y - topRight.y) * scale\n  );\n};\n\nexport const fitToBoundsOfArray = (\n  map: google.maps.Map,\n  arr_of_coords: [number, number][]\n): Promise<void> =>\n  new Promise((resolve, reject) => {\n    if (Array.isArray(arr_of_coords) === false) {\n      reject(\"Input not valid array.\");\n    } else if (arr_of_coords.length < 1) {\n      reject(\"Array needs to countain at least one element.\");\n    }\n    const lat_lng_literal = {\n      east: Number.MIN_SAFE_INTEGER,\n      west: Number.MAX_SAFE_INTEGER,\n      north: Number.MAX_SAFE_INTEGER,\n      south: Number.MIN_SAFE_INTEGER,\n    };\n\n    arr_of_coords.forEach((point) => {\n      lat_lng_literal.west =\n        point[0] < lat_lng_literal.west ? point[0] : lat_lng_literal.west;\n      lat_lng_literal.east =\n        point[0] > lat_lng_literal.east ? point[0] : lat_lng_literal.east;\n      lat_lng_literal.north =\n        point[1] < lat_lng_literal.north ? point[1] : lat_lng_literal.north;\n      lat_lng_literal.south =\n        point[1] > lat_lng_literal.south ? point[1] : lat_lng_literal.south;\n    });\n\n    if (map) {\n      map.fitBounds(lat_lng_literal);\n    }\n    resolve();\n  });\nexport const fitToBoundsLiteral = (\n  bounds: GMW_LatLngBoundsLiteral,\n  map?: google.maps.Map\n): Promise<void> =>\n  new Promise((resolve) => {\n    if (map) {\n      map.fitBounds(bounds);\n    }\n    resolve();\n  });\nexport const fitToBoundsOfObjectArray = (\n  arr_of_latlngliteral: GMW_LatLngLiteral[],\n  map?: google.maps.Map\n): Promise<void> =>\n  new Promise((resolve, reject) => {\n    if (Array.isArray(arr_of_latlngliteral) === false) {\n      reject(\"Input not valid array.\");\n    } else if (arr_of_latlngliteral.length < 1) {\n      reject(\"Array needs to contain at least one element.\");\n    }\n    const lat_lng_literal = {\n      east: -Infinity,\n      west: Infinity,\n      north: Infinity,\n      south: -Infinity,\n    };\n\n    arr_of_latlngliteral.forEach((point) => {\n      lat_lng_literal.west =\n        point.lng < lat_lng_literal.west ? point.lng : lat_lng_literal.west;\n      lat_lng_literal.east =\n        point.lng > lat_lng_literal.east ? point.lng : lat_lng_literal.east;\n      lat_lng_literal.north =\n        point.lat < lat_lng_literal.north ? point.lat : lat_lng_literal.north;\n      lat_lng_literal.south =\n        point.lat > lat_lng_literal.south ? point.lat : lat_lng_literal.south;\n    });\n\n    if (map) {\n      map.fitBounds(lat_lng_literal);\n    }\n    resolve();\n  });\n\nexport const setPolyline = (\n  map: google.maps.Map,\n  map_objects: MapObjects,\n  cutting: CuttingState,\n  id: string | number,\n  options: GMW_PolylineOptionsSet\n): Promise<GMW_WrappedPolyline> =>\n  setMapObject(map, map_objects, cutting, \"polyline\", id, options) as Promise<\n    GMW_WrappedPolyline\n  >;\nexport const setPolygon = (\n  map: google.maps.Map,\n  map_objects: MapObjects,\n  cutting: CuttingState,\n  id: string | number,\n  options: GMW_PolygonOptionsSet\n): Promise<GMW_WrappedPolygon> =>\n  setMapObject(map, map_objects, cutting, \"polygon\", id, options) as Promise<\n    GMW_WrappedPolygon\n  >;\nexport const setMarker = (\n  map: google.maps.Map,\n  map_objects: MapObjects,\n  cutting: CuttingState,\n  id: string | number,\n  options: GMW_MarkerOptionsSet\n): Promise<GMW_WrappedMarker> =>\n  setMapObject(map, map_objects, cutting, \"marker\", id, options) as Promise<\n    GMW_WrappedMarker\n  >;\n\ntype setMapObject = (\n  map: google.maps.Map,\n  map_objects: MapObjects,\n  cutting: CuttingState,\n  type: MapObjectType,\n  id: string | number,\n  options: AnyObjectOptionsSet,\n  current_options_id?: string\n) => Promise<GMW_WrappedPolyline | GMW_WrappedPolygon | GMW_WrappedMarker>;\n\nexport const setMapObject: setMapObject = (\n  map,\n  map_objects,\n  cutting,\n  type,\n  id,\n  options,\n  selected_options_id = \"default\"\n) =>\n  new Promise((resolve, reject) => {\n    if (Object.prototype.hasOwnProperty.call(map_objects[type], id)) {\n      //This ID has already been drawn.\n      const map_obj = map_objects[type][id];\n      const visible = map_obj.gmaps_obj.getVisible();\n      const opts = Object.assign(\n        {},\n        map_obj.options[selected_options_id],\n        options[selected_options_id],\n        { visible: visible }\n      );\n      map_obj.selected_options_id = selected_options_id;\n      switch (map_obj.type) {\n        case \"polyline\": {\n          map_obj.gmaps_obj.setOptions(opts as GMW_PolylineOptions);\n          map_obj.options = options as GMW_PolylineOptionsSet;\n          break;\n        }\n        case \"polygon\": {\n          map_obj.gmaps_obj.setOptions(opts as GMW_PolygonOptions);\n          map_obj.options = options as GMW_PolygonOptionsSet;\n          break;\n        }\n        case \"marker\": {\n          map_obj.gmaps_obj.setOptions(opts as GMW_MarkerOptions);\n          map_obj.options = options as GMW_MarkerOptionsSet;\n          break;\n        }\n        default: {\n          reject(new Error(\"Invalid map object type.\"));\n        }\n      }\n      resolve(map_obj);\n      return;\n    }\n\n    //This extra interface exists so that _cbs can be created at different points in the following code.\n    //Otherwise ungainly \"hasOwnProperty\"-like checks are required.\n    interface MapObjShell extends Partial<GMW_WrappedGmapObj> {\n      _cbs: {\n        [key: string]: (e?: any) => void;\n      };\n      type: MapObjectType;\n      selected_options_id: string;\n    }\n\n    const map_obj_shell: MapObjShell = {\n      _cbs: {},\n      type: type,\n      selected_options_id: selected_options_id,\n    };\n    let events: AllMapObjEvents[] = [];\n    let path_events: AllMapObjEvents[] = [];\n    switch (type) {\n      case \"marker\": {\n        const opts = Object.assign({}, DEFAULT_MARKER_OPTIONS, options.default);\n        map_obj_shell.gmaps_obj = new window.google.maps.Marker(opts);\n        map_obj_shell.options = options;\n        events = [\n          \"click\",\n          \"mouseover\",\n          \"mouseout\",\n          \"mousedown\",\n          \"mouseup\",\n          \"dragstart\",\n          \"drag\",\n          \"dragend\",\n          \"dblclick\",\n          \"rightclick\",\n        ];\n        break;\n      }\n      case \"polygon\": {\n        const opts = Object.assign(\n          {},\n          DEFAULT_POLYGON_OPTIONS,\n          options.default\n        );\n        map_obj_shell.gmaps_obj = new window.google.maps.Polygon(opts);\n        map_obj_shell.options = options;\n        events = [\n          \"click\",\n          \"dblclick\",\n          \"dragstart\",\n          \"drag\",\n          \"dragend\",\n          \"mouseover\",\n          \"mouseout\",\n          \"mousedown\",\n          \"mouseup\",\n          \"mousemove\",\n          \"rightclick\",\n        ];\n        path_events = [\"set_at\", \"remove_at\", \"insert_at\"];\n        break;\n      }\n      case \"polyline\": {\n        const opts = Object.assign(\n          {},\n          DEFAULT_POLYLINE_OPTIONS,\n          options.default\n        );\n        map_obj_shell.gmaps_obj = new window.google.maps.Polyline(opts);\n        map_obj_shell.options = options;\n        events = [\n          \"click\",\n          \"dblclick\",\n          \"dragstart\",\n          \"drag\",\n          \"dragend\",\n          \"mouseover\",\n          \"mouseout\",\n          \"mousedown\",\n          \"mouseup\",\n          \"mousemove\",\n          \"rightclick\",\n        ];\n        path_events = [\"set_at\", \"remove_at\", \"insert_at\"];\n        break;\n      }\n      default: {\n        reject(new Error(\"Invalid map object type.\"));\n        return;\n      }\n    }\n\n    map_obj_shell.registerEventCB = (event_type: string, cb) => {\n      map_obj_shell._cbs[event_type] = cb;\n    };\n    map_obj_shell.unregisterEventCB = (event_type) => {\n      if (\n        Object.prototype.hasOwnProperty.call(map_obj_shell._cbs, event_type)\n      ) {\n        delete map_obj_shell._cbs[event_type];\n      }\n    };\n\n    map_obj_shell.remove = () => {\n      return unsetMapObject(map_objects, cutting, type, id);\n    };\n    map_obj_shell.setOptions = (new_options) => {\n      return setMapObject(\n        map,\n        map_objects,\n        cutting,\n        type,\n        id,\n        new_options,\n        map_obj_shell.selected_options_id\n      );\n    };\n    map_obj_shell.applyOptions = (options_id) => {\n      if (!Object.prototype.hasOwnProperty.call(options, options_id)) {\n        throw new Error(\n          \"Tried to applyOptions(options_id) with '\" +\n            options_id +\n            \"', but options for given id are not defined.\"\n        );\n      }\n      map_obj_shell.selected_options_id = options_id;\n      const visible = (map_obj_shell.gmaps_obj as google.maps.Polygon).getVisible();\n      const opts_set = map_obj_shell.options;\n      map_obj_shell.gmaps_obj.setOptions(\n        Object.assign({}, opts_set.default, opts_set[options_id], {\n          visible: visible,\n        })\n      );\n    };\n    map_obj_shell.hide = () => {\n      map_obj_shell.gmaps_obj.setOptions(\n        Object.assign(\n          {},\n          map_obj_shell.options[map_obj_shell.selected_options_id],\n          { visible: false }\n        )\n      );\n    };\n    map_obj_shell.show = () => {\n      map_obj_shell.gmaps_obj.setOptions(\n        Object.assign(\n          {},\n          map_obj_shell.options[map_obj_shell.selected_options_id],\n          { visible: true }\n        )\n      );\n    };\n    const map_obj = map_obj_shell as GMW_WrappedGmapObj;\n    events.forEach((event_type) => {\n      map_obj.gmaps_obj.addListener(event_type, (e: any) => {\n        return mapObjectEventCB(cutting, map_obj, event_type, e);\n      });\n    });\n    path_events.forEach((event_type) => {\n      map_obj.gmaps_obj.getPath().addListener(event_type, (e: any) => {\n        return mapObjectEventCB(cutting, map_obj, event_type, e);\n      });\n    });\n\n    map_obj.gmaps_obj.setMap(map);\n\n    switch (map_obj.type) {\n      case \"polyline\": {\n        map_obj.zoomTo = () => {\n          panZoomToObjectOrFeature(map, map_obj as GMW_WrappedPolyline, true);\n        };\n        map_obj.panTo = () => {\n          panZoomToObjectOrFeature(map, map_obj as GMW_WrappedPolyline, false);\n        };\n        map_objects[type][id] = map_obj as GMW_WrappedPolyline;\n        resolve(map_obj as GMW_WrappedPolyline);\n        break;\n      }\n      case \"polygon\": {\n        map_obj.zoomTo = () => {\n          panZoomToObjectOrFeature(map, map_obj as GMW_WrappedPolygon, true);\n        };\n        map_obj.panTo = () => {\n          panZoomToObjectOrFeature(map, map_obj as GMW_WrappedPolygon, false);\n        };\n        map_objects[type][id] = map_obj as GMW_WrappedPolygon;\n        resolve(map_obj as GMW_WrappedPolygon);\n        break;\n      }\n      case \"marker\": {\n        map_obj.zoomTo = () => {\n          panZoomToObjectOrFeature(map, map_obj as GMW_WrappedMarker, true);\n        };\n        map_obj.panTo = () => {\n          panZoomToObjectOrFeature(map, map_obj as GMW_WrappedMarker, false);\n        };\n        map_objects[type][id] = map_obj as GMW_WrappedMarker;\n        resolve(map_obj as GMW_WrappedMarker);\n        break;\n      }\n      default: {\n        reject(new Error(\"Invalid map object type.\"));\n      }\n    }\n    return;\n  });\n\nexport const unsetMapObject = (\n  map_objects: MapObjects,\n  cutting: CuttingState,\n  type: MapObjectType,\n  id: string | number\n): Promise<boolean> =>\n  new Promise<boolean>((resolve, reject) => {\n    if (Object.prototype.hasOwnProperty.call(map_objects[type], id)) {\n      //This ID has been drawn.\n\n      if (cutting.id && cutting.id !== id) {\n        //This object is currently being cut, it cannot be deleted.\n        reject(\n          new Error(\n            \"MAP: Object is currently in cuttingMode; it cannot be removed!\"\n          )\n        );\n        return;\n      }\n\n      map_objects[type][id].gmaps_obj.setMap(null);\n      delete map_objects[type][id];\n      resolve(true);\n      return;\n    }\n    reject(new Error(\"MAP: MapObject does not exist.\"));\n  });\nexport const mapObjectEventCB = (\n  cutting: CuttingState,\n  map_obj: GMW_WrappedGmapObj,\n  event_type: AllMapObjEvents,\n  e: any\n): boolean => {\n  if (cutting.enabled) {\n    //When the map is in cutting mode no object event callbacks are allowed.\n    return true;\n  }\n\n  if (\n    Object.prototype.hasOwnProperty.call(map_obj._cbs, event_type) &&\n    map_obj._cbs[event_type]\n  ) {\n    map_obj._cbs[event_type](e);\n  }\n  return true;\n};\n\nexport const panZoomToObjectOrFeature = (\n  map: google.maps.Map,\n  obj:\n    | GMW_WrappedMarker\n    | GMW_WrappedPolygon\n    | GMW_WrappedPolyline\n    | GMW_WrappedFeature,\n  zoom = true\n): void => {\n  if (!map) {\n    return;\n  }\n  if (Object.prototype.hasOwnProperty.call(obj, \"gmaps_feature\")) {\n    if (zoom) {\n      map.fitBounds((obj as GMW_WrappedFeature)._bbox);\n    } else {\n      map.panToBounds((obj as GMW_WrappedFeature)._bbox);\n    }\n    return;\n  }\n\n  obj = obj as GMW_WrappedMarker | GMW_WrappedPolygon | GMW_WrappedPolyline; //Reset typing.\n  switch (obj.type) {\n    case \"marker\": {\n      const position = obj.gmaps_obj.getPosition();\n      map.setCenter(position);\n      if (zoom) {\n        map.setZoom(14);\n      }\n      break;\n    }\n    case \"polyline\": {\n      const bounds = {\n        north: -Infinity,\n        south: Infinity,\n        west: Infinity,\n        east: -Infinity,\n      };\n      obj.gmaps_obj.getPath().forEach((point) => {\n        bounds.north = point.lat() > bounds.north ? point.lat() : bounds.north;\n        bounds.south = point.lat() < bounds.south ? point.lat() : bounds.south;\n        bounds.west = point.lng() < bounds.west ? point.lng() : bounds.west;\n        bounds.east = point.lng() > bounds.east ? point.lng() : bounds.east;\n      });\n      if (zoom) {\n        map.fitBounds(bounds);\n      } else {\n        map.panToBounds(bounds);\n      }\n      break;\n    }\n    case \"polygon\": {\n      const bounds = {\n        north: -Infinity,\n        south: Infinity,\n        west: Infinity,\n        east: -Infinity,\n      };\n      obj.gmaps_obj.getPaths().forEach((path) => {\n        path.forEach((point) => {\n          bounds.north =\n            point.lat() > bounds.north ? point.lat() : bounds.north;\n          bounds.south =\n            point.lat() < bounds.south ? point.lat() : bounds.south;\n          bounds.west = point.lng() < bounds.west ? point.lng() : bounds.west;\n          bounds.east = point.lng() > bounds.east ? point.lng() : bounds.east;\n        });\n      });\n      if (zoom) {\n        map.fitBounds(bounds);\n      } else {\n        map.panToBounds(bounds);\n      }\n      break;\n    }\n  }\n};\n"]}