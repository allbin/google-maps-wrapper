{"version":3,"sources":["../src/module/internal_helpers.ts"],"names":[],"mappings":"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","file":"internal_helpers.js","sourcesContent":["import WrappedMapBase, { AnyObjectOptions, WrappedGmapObj, AllMapObjEvents, LatLng, LatLngLiteral, MapObjectType, PolylineOptions, WrappedPolyline, MarkerOptions, WrappedMarker, PolygonOptions, WrappedPolygon } from './';\n\n/////////////////////////////////\n//INTERNAL MAP HELPER FUNCTIONS\n//These functions are not exported to enduser, only used\n//internally by the map.\n\nconst DEFAULT_POLYLINE_OPTIONS = {\n    visible: true\n};\nconst DEFAULT_POLYGON_OPTIONS = {\n    visible: true\n};\nconst DEFAULT_MARKER_OPTIONS = {\n    visible: true\n};\n\n\nexport function fromLatLngToPixel(map_ref: WrappedMapBase, latLng: LatLng) {\n    if (!map_ref.map) {\n        throw new Error(\"Cannot call fromLatLngToPixel before init is finished.\");\n    }\n    let map = map_ref.map;\n    let bounds = map.getBounds();\n    if (!bounds) {\n        throw new Error(\"Map not mounted when calling fromLatLngToPixel\");\n    }\n    var topRight = map.getProjection().fromLatLngToPoint(bounds.getNorthEast());\n    var bottomLeft = map.getProjection().fromLatLngToPoint(bounds.getSouthWest());\n    var scale = Math.pow(2, map.getZoom());\n    var worldPoint = map.getProjection().fromLatLngToPoint(latLng);\n    return new window.google.maps.Point((worldPoint.x - bottomLeft.x) * scale, (worldPoint.y - topRight.y) * scale);\n}\n\nexport function fitToBoundsOfArray(map_ref: WrappedMapBase, arr_of_coords: [number, number][]) {\n    //Takes [[x, y], ...] array.\n    return new Promise((resolve, reject) => {\n        if (Array.isArray(arr_of_coords) === false) {\n            reject(\"Input not valid array.\");\n        } else if (arr_of_coords.length < 1) {\n            reject(\"Array needs to countain at least one element.\");\n        }\n        if (!map_ref.initialized) {\n            map_ref.do_after_init.push(() => {\n                fitToBoundsOfArray(map_ref, arr_of_coords).then((res) => {\n                    resolve(res);\n                }).catch((err) => {\n                    reject(err);\n                });\n            });\n            return;\n        }\n        let lat_lng_literal = {\n            east: -99999999,\n            west: 99999999,\n            north: 99999999,\n            south: -99999999\n        };\n\n        arr_of_coords.forEach((point) => {\n            lat_lng_literal.west = (point[0] < lat_lng_literal.west) ? point[0] : lat_lng_literal.west;\n            lat_lng_literal.east = (point[0] > lat_lng_literal.east) ? point[0] : lat_lng_literal.east;\n            lat_lng_literal.north = (point[1] < lat_lng_literal.north) ? point[1] : lat_lng_literal.north;\n            lat_lng_literal.south = (point[1] > lat_lng_literal.south) ? point[1] : lat_lng_literal.south;\n        });\n\n        if (map_ref.map) {\n            map_ref.map.fitBounds(lat_lng_literal);\n        }\n        resolve();\n    });\n}\nexport function fitToBoundsOfObjectArray(map_ref: WrappedMapBase, arr_of_latlngliteral: LatLngLiteral[]) {\n    //Takes [{ lat: ?, lng: ? }, ...] array.\n    return new Promise((resolve, reject) => {\n        if (Array.isArray(arr_of_latlngliteral) === false) {\n            reject(\"Input not valid array.\");\n        } else if (arr_of_latlngliteral.length < 1) {\n            reject(\"Array needs to countain at least one element.\");\n        }\n        if (!map_ref.initialized) {\n            map_ref.do_after_init.push(() => {\n                fitToBoundsOfObjectArray(map_ref, arr_of_latlngliteral).then((res) => {\n                    resolve(res);\n                }).catch((err) => {\n                    reject(err);\n                });\n            });\n            return;\n        }\n        let lat_lng_literal = {\n            east: -99999999,\n            west: 99999999,\n            north: 99999999,\n            south: -99999999\n        };\n\n        arr_of_latlngliteral.forEach((point) => {\n            lat_lng_literal.west = (point.lng < lat_lng_literal.west) ? point.lng : lat_lng_literal.west;\n            lat_lng_literal.east = (point.lng > lat_lng_literal.east) ? point.lng : lat_lng_literal.east;\n            lat_lng_literal.north = (point.lat < lat_lng_literal.north) ? point.lat : lat_lng_literal.north;\n            lat_lng_literal.south = (point.lat > lat_lng_literal.south) ? point.lat : lat_lng_literal.south;\n        });\n\n        if (map_ref.map) {\n            map_ref.map.fitBounds(lat_lng_literal);\n        }\n        resolve();\n    });\n}\n\nexport function setPolyline(map_ref: WrappedMapBase, id: string | number, options: PolylineOptions, hover_options: PolylineOptions | null = null): Promise<WrappedPolyline> {\n    return setMapObject(map_ref, \"polyline\", id, options, hover_options) as Promise<WrappedPolyline>;\n}\nexport function setPolygon(map_ref: WrappedMapBase, id: string | number, options: PolylineOptions, hover_options: PolylineOptions | null = null): Promise<WrappedPolygon> {\n    return setMapObject(map_ref, \"polygon\", id, options, hover_options) as Promise<WrappedPolygon>;\n}\nexport function setMarker(map_ref: WrappedMapBase, id: string | number, options: MarkerOptions, hover_options: MarkerOptions | null = null): Promise<WrappedMarker> {\n    return setMapObject(map_ref, \"marker\", id, options, hover_options) as Promise<WrappedMarker>;\n}\n\ntype setMapObject = (\n    map_ref: WrappedMapBase,\n    type: MapObjectType,\n    id: string | number,\n    options: AnyObjectOptions,\n    hover_options: AnyObjectOptions | null\n) => Promise<WrappedPolyline|WrappedPolygon|WrappedMarker>;\n\nexport const setMapObject: setMapObject = (map_ref, type, id, options, hover_options) => {\n\n    return new Promise((resolve, reject) => {\n        if (!map_ref.initialized) {\n            console.log(map_ref);\n            map_ref.do_after_init.push(() => {\n                setMapObject(map_ref, type, id, options, hover_options).then((res) => {\n                    resolve(res);\n                }).catch((err) => {\n                    reject(err);\n                });\n            });\n            return;\n        }\n\n        if (map_ref.map_objects[type].hasOwnProperty(id)) {\n            //This ID has already been drawn.\n            let map_obj = map_ref.map_objects[type][id];\n            let opts;\n            if (map_obj.hovered && hover_options) {\n                opts = Object.assign({}, map_obj.options, options, hover_options);\n            } else {\n                opts = Object.assign({}, map_obj.options, options);\n            }\n            switch (map_obj.type) {\n                case \"polyline\": {\n                    map_obj.gmaps_obj.setOptions(opts as PolylineOptions);\n                    map_obj.options = options as PolylineOptions;\n                    if (hover_options) { map_obj.hover_options = hover_options as PolylineOptions; }\n                    break;\n                }\n                case \"polygon\": {\n                    map_obj.gmaps_obj.setOptions(opts as PolygonOptions);\n                    map_obj.options = options as PolygonOptions;\n                    if (hover_options) { map_obj.hover_options = hover_options as PolygonOptions; }\n                    break;\n                }\n                case \"marker\": {\n                    map_obj.gmaps_obj.setOptions(opts as MarkerOptions);\n                    map_obj.options = options as MarkerOptions;\n                    if (hover_options) { map_obj.hover_options = hover_options as MarkerOptions; }\n                    break;\n                }\n                default: {\n                    reject(new Error(\"Invalid map object type.\"));\n                }\n            }\n            resolve(map_obj);\n            return;\n        }\n\n        //This extra interface exists so that _cbs can be created at different points in the following code.\n        //Otherwise ungainly \"hasOwnProperty\"-like checks are required.\n        interface MapObjShell extends Partial<WrappedGmapObj> {\n            _cbs: {\n                [key: string]: (e?: any) => void;\n            };\n        }\n\n        let map_obj_shell: MapObjShell = {\n            _cbs: {},\n            hovered: false,\n            type: type\n        };\n        let events: AllMapObjEvents[] = [];\n        let path_events: AllMapObjEvents[] = [];\n        switch (type) {\n            case \"marker\": {\n                let opts = Object.assign({}, DEFAULT_MARKER_OPTIONS, options);\n                map_obj_shell.gmaps_obj = new window.google.maps.Marker(opts);\n                map_obj_shell.options = opts;\n                events = [\"click\", \"mouseover\", \"mouseout\", \"mousedown\", \"mouseup\", \"dragstart\", \"drag\", \"dragend\", \"dblclick\", \"rightclick\"];\n                break;\n            }\n            case \"polygon\": {\n                let opts = Object.assign({}, DEFAULT_POLYGON_OPTIONS, options);\n                map_obj_shell.gmaps_obj = new window.google.maps.Polygon(opts);\n                map_obj_shell.options = opts;\n                events = [\"click\", \"dblclick\", \"dragstart\", \"drag\", \"dragend\", \"mouseover\", \"mouseout\", \"mousedown\", \"mouseup\", \"mousemove\", \"rightclick\"];\n                path_events = [\"set_at\", \"remove_at\", \"insert_at\"];\n                break;\n            }\n            case \"polyline\": {\n                let opts = Object.assign({}, DEFAULT_POLYLINE_OPTIONS, options);\n                map_obj_shell.gmaps_obj = new window.google.maps.Polyline(opts);\n                map_obj_shell.options = opts;\n                events = [\"click\", \"dblclick\", \"dragstart\", \"drag\", \"dragend\", \"mouseover\", \"mouseout\", \"mousedown\", \"mouseup\", \"mousemove\", \"rightclick\"];\n                path_events = [\"set_at\", \"remove_at\", \"insert_at\"];\n                break;\n            }\n            default: {\n                reject(new Error(\"Invalid map object type.\"));\n                return;\n            }\n        }\n        map_obj_shell.hover_options = hover_options;\n\n        map_obj_shell.registerEventCB = (event_type: string, cb) => {\n            map_obj_shell._cbs[event_type] = cb;\n        };\n        map_obj_shell.unregisterEventCB = (event_type) => {\n            if (map_obj_shell._cbs.hasOwnProperty(event_type)) {\n                delete map_obj_shell._cbs[event_type];\n            }\n        };\n\n        map_obj_shell.hover = () => {\n            if (!map_obj_shell.hover_options) { return; }\n            let opts = Object.assign({}, map_obj_shell.options, map_obj_shell.hover_options);\n            let whitelisted_opts = {\n                strokeColor: opts.strokeColor,\n                strokeWidth: opts.strokeWidth,\n                fillColor: opts.fillColor,\n                fillOpacity: opts.fillOpacity\n            };\n            map_obj_shell.gmaps_obj.setOptions(whitelisted_opts);\n            map_obj_shell.hovered = true;\n        };\n        map_obj_shell.unhover = () => {\n            let opts = Object.assign({}, map_obj_shell.options);\n            let whitelisted_opts = {\n                strokeColor: opts.strokeColor,\n                strokeWidth: opts.strokeWidth,\n                fillColor: opts.fillColor,\n                fillOpacity: opts.fillOpacity\n            };\n            map_obj_shell.gmaps_obj.setOptions(whitelisted_opts);\n            map_obj_shell.hovered = false;\n        };\n        map_obj_shell.remove = () => { return unsetMapObject(map_ref, type, id); };\n        map_obj_shell.update = (new_options) => { return setMapObject(map_ref, type, id, new_options, hover_options); };\n        map_obj_shell.updateHover = (new_hover_options) => { return setMapObject(map_ref, type, id, options, new_hover_options); };\n        map_obj_shell.hide = () => {\n            map_obj_shell.gmaps_obj.setOptions(Object.assign({}, map_obj_shell.options, { visible: false }));\n        };\n        map_obj_shell.show = () => {\n            map_obj_shell.gmaps_obj.setOptions(Object.assign({}, map_obj_shell.options, { visible: true }));\n        };\n        let map_obj = map_obj_shell as WrappedGmapObj;\n        events.forEach((event_type) => {\n            map_obj.gmaps_obj.addListener(event_type, (e: any) => { return mapObjectEventCB(map_ref, map_obj, event_type, e); });\n        });\n        path_events.forEach((event_type) => {\n            map_obj.gmaps_obj.getPath().addListener(event_type, (e: any) => { return mapObjectEventCB(map_ref, map_obj, event_type, e); });\n        });\n\n        map_obj.gmaps_obj.setMap(map_ref.map);\n\n        switch (map_obj.type) {\n            case \"polyline\": {\n                map_ref.map_objects[type][id] = map_obj as WrappedPolyline;\n                resolve(map_obj as WrappedPolyline);\n                break;\n            }\n            case \"polygon\": {\n                map_ref.map_objects[type][id] = map_obj as WrappedPolygon;\n                resolve(map_obj as WrappedPolygon);\n                break;\n            }\n            case \"marker\": {\n                map_ref.map_objects[type][id] = map_obj as WrappedMarker;\n                resolve(map_obj as WrappedMarker);\n                break;\n            }\n            default: {\n                reject(new Error(\"Invalid map object type.\"));\n            }\n        }\n        return;\n    });\n};\n\nexport function unsetMapObject(map_ref: WrappedMapBase, type: MapObjectType, id: string | number) {\n    return new Promise<boolean>((resolve, reject) => {\n        if (!map_ref.initialized) {\n            map_ref.do_after_init.push(() => {\n                unsetMapObject(map_ref, type, id).then((res) => {\n                    resolve(res);\n                }).catch((err) => {\n                    reject(err);\n                });\n            });\n            return;\n        }\n\n        if (map_ref.map_objects[type].hasOwnProperty(id)) {\n            //This ID has been drawn.\n\n            if (map_ref.cutting.id !== id) {\n                //This object is currently being cut, it cannot be deleted.\n                reject(new Error(\"MAP: Object is currently in cuttingMode; it cannot be removed!\"));\n                return;\n            }\n\n            map_ref.map_objects[type][id].gmaps_obj.setMap(null);\n            delete map_ref.map_objects[type][id];\n            resolve(true);\n            return;\n        }\n        reject(new Error(\"MAP: MapObject does not exist.\"));\n    });\n}\n\nexport function mapObjectEventCB(map_ref: WrappedMapBase, map_obj: WrappedGmapObj, event_type: AllMapObjEvents, e: any) {\n    if (map_ref.cutting.enabled) {\n        //When the map is in cutting mode no object event callbacks are allowed.\n        return true;\n    }\n    if (event_type === \"mouseover\") { map_obj.hover(); }\n    if (event_type === \"mouseout\") { map_obj.unhover(); }\n\n    if (map_obj._cbs.hasOwnProperty(event_type) && map_obj._cbs[event_type]) {\n        map_obj._cbs[event_type](e);\n    }\n    return true;\n}\n"]}