{"version":3,"sources":["../src/module/ScriptCache.ts"],"names":[],"mappings":"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","file":"ScriptCache.js","sourcesContent":["let counter = 0;\nlet scriptMap = new Map();\n\nexport const ScriptCache = (function(global) {\n    return function ScriptCache (scripts: any) {\n        const Cache = {\n            _onLoad: function (key: string) {\n                return (cb: any) => {\n                    let stored = scriptMap.get(key);\n                    if (stored) {\n                        stored.promise.then(() => {\n                            stored.error ? cb(stored.error) : cb(null, stored);\n                        });\n                    } else {\n                        // TODO:\n                    }\n                };\n            },\n\n            _scriptTag: (key: string, src: any) => {\n                if (!scriptMap.has(key)) {\n                    let tag: any = document.createElement('script');\n                    let promise = new Promise((resolve, reject) => {\n                        let body = document.getElementsByTagName('body')[0];\n\n                        tag.type = 'text/javascript';\n                        tag.async = false; // Load in order\n\n                        const cbName = `loaderCB${counter++}${Date.now()}`;\n                        const cleanup = () => {\n                            const gl = global as any;\n                            if (gl[cbName] && typeof gl[cbName] === 'function') {\n                                gl[cbName] = null;\n                            }\n                        };\n\n                        let handleResult = (state: any) => {\n                            return (evt: any) => {\n                                let stored = scriptMap.get(key);\n                                if (state === 'loaded') {\n                                    stored.resolved = true;\n                                    resolve(src);\n                                    // stored.handlers.forEach(h => h.call(null, stored))\n                                    // stored.handlers = []\n                                } else if (state === 'error') {\n                                    stored.errored = true;\n                                    // stored.handlers.forEach(h => h.call(null, stored))\n                                    // stored.handlers = [];\n                                    reject(evt);\n                                }\n\n                                cleanup();\n                            };\n                        };\n\n\n                        tag.onload = handleResult('loaded');\n                        tag.onerror = handleResult('error');\n                        tag.onreadystatechange = () => {\n                            handleResult(tag.readyState);\n                        };\n\n                        // Pick off callback, if there is one\n                        if (src.match(/callback=CALLBACK_NAME/)) {\n                            src = src.replace(/(callback=)[^&]+/, `$1${cbName}`);\n                            let w = window as any;\n                            w[cbName] = tag.onload;\n                        } else {\n                            tag.addEventListener('load', tag.onload);\n                        }\n                        tag.addEventListener('error', tag.onerror);\n\n                        tag.src = src;\n                        body.appendChild(tag);\n                        return tag;\n                    });\n                    let initialState = {\n                        loaded: false,\n                        error: false,\n                        promise: promise,\n                        tag\n                    };\n                    scriptMap.set(key, initialState);\n                }\n                return scriptMap.get(key);\n            }\n        };\n\n        Object.keys(scripts).forEach(function(key) {\n            const script = scripts[key];\n            const C = Cache as any;\n            C[key] = {\n                tag:    C._scriptTag(key, script),\n                onLoad: C._onLoad(key)\n            };\n        });\n\n        return Cache;\n    };\n})(window);\n\nexport default ScriptCache;\n"]}