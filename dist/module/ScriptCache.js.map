{"version":3,"sources":["../src/module/ScriptCache.ts"],"names":[],"mappings":"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","file":"ScriptCache.js","sourcesContent":["let counter = 0;\nconst scriptMap = new Map();\n\nexport const ScriptCache = (function (global) {\n  return (scripts: any) => {\n    const Cache: any = {\n      _onLoad: function (key: string) {\n        return (cb: any) => {\n          const stored = scriptMap.get(key);\n          if (stored) {\n            stored.promise.then(() => {\n              stored.error ? cb(stored.error) : cb(null, stored);\n            });\n          } else {\n            // TODO:\n          }\n        };\n      },\n\n      _scriptTag: (key: string, src: any) => {\n        if (!scriptMap.has(key)) {\n          const tag: any = document.createElement(\"script\");\n          const promise = new Promise((resolve, reject) => {\n            const body = document.getElementsByTagName(\"body\")[0];\n\n            tag.type = \"text/javascript\";\n            tag.async = false; // Load in order\n\n            const cbName = `loaderCB${counter++}${Date.now()}`;\n            const cleanup = (): void => {\n              const gl = global as any;\n              if (gl[cbName] && typeof gl[cbName] === \"function\") {\n                gl[cbName] = null;\n              }\n            };\n\n            const handleResult = (state: any) => {\n              return (evt: any) => {\n                const stored = scriptMap.get(key);\n                if (state === \"loaded\") {\n                  stored.resolved = true;\n                  resolve(src);\n                  // stored.handlers.forEach(h => h.call(null, stored))\n                  // stored.handlers = []\n                } else if (state === \"error\") {\n                  stored.errored = true;\n                  // stored.handlers.forEach(h => h.call(null, stored))\n                  // stored.handlers = [];\n                  reject(evt);\n                }\n\n                cleanup();\n              };\n            };\n\n            tag.onload = handleResult(\"loaded\");\n            tag.onerror = handleResult(\"error\");\n            tag.onreadystatechange = () => {\n              handleResult(tag.readyState);\n            };\n\n            // Pick off callback, if there is one\n            if (src.match(/callback=CALLBACK_NAME/)) {\n              src = src.replace(/(callback=)[^&]+/, `$1${cbName}`);\n              const w = window as any;\n              w[cbName] = tag.onload;\n            } else {\n              tag.addEventListener(\"load\", tag.onload);\n            }\n            tag.addEventListener(\"error\", tag.onerror);\n\n            tag.src = src;\n            body.appendChild(tag);\n            return tag;\n          });\n          const initialState = {\n            loaded: false,\n            error: false,\n            promise: promise,\n            tag,\n          };\n          scriptMap.set(key, initialState);\n        }\n        return scriptMap.get(key);\n      },\n    };\n\n    Object.keys(scripts).forEach(function (key) {\n      const script = scripts[key];\n      const C = Cache;\n      C[key] = {\n        tag: C._scriptTag(key, script),\n        onLoad: C._onLoad(key),\n      };\n    });\n\n    return Cache;\n  };\n})(window);\n\nexport default ScriptCache;\n"]}